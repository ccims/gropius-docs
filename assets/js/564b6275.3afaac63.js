"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[73039],{852820:(e,t,l)=>{l.r(t),l.d(t,{Badge:()=>c,Bullet:()=>u,Details:()=>b,SpecifiedBy:()=>d,assets:()=>p,contentTitle:()=>s,default:()=>g,frontMatter:()=>a,metadata:()=>o,toc:()=>f});var i=l(487462),n=l(667294),r=l(603905);const a={id:"user-list-filter-input",title:"UserListFilterInput",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},s=void 0,o={unversionedId:"graphql/api-public/inputs/user-list-filter-input",id:"graphql/api-public/inputs/user-list-filter-input",title:"UserListFilterInput",description:"Used to filter by a connection-based property. Fields are joined by AND",source:"@site/docs/graphql/api-public/inputs/user-list-filter-input.mdx",sourceDirName:"graphql/api-public/inputs",slug:"/graphql/api-public/inputs/user-list-filter-input",permalink:"/gropius-docs/graphql/api-public/inputs/user-list-filter-input",draft:!1,tags:[],version:"current",frontMatter:{id:"user-list-filter-input",title:"UserListFilterInput",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},sidebar:"graphqlSidebar"},p={},u=()=>(0,r.kt)(n.Fragment,null,(0,r.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),d=e=>(0,r.kt)(n.Fragment,null,"Specification",(0,r.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),c=e=>(0,r.kt)(n.Fragment,null,(0,r.kt)("span",{className:e.class},e.text)),f=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>UserListFilterInput.<b>all</b></code><Bullet /><code>UserFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-userlistfilterinputballbcodeuserfilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>UserListFilterInput.<b>any</b></code><Bullet /><code>UserFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-userlistfilterinputbanybcodeuserfilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>UserListFilterInput.<b>none</b></code><Bullet /><code>UserFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-userlistfilterinputbnonebcodeuserfilterinput-",level:4},{value:"Member of",id:"member-of",level:3}],b=e=>{let{dataOpen:t,dataClose:l,children:a,startOpen:s=!1}=e;const[o,p]=(0,n.useState)(s);return(0,r.kt)("details",(0,i.Z)({},o?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,r.kt)("summary",{onClick:e=>{e.preventDefault(),p((e=>!e))},style:{listStyle:"none"}},o?t:l),o&&a)},k={Bullet:u,SpecifiedBy:d,Badge:c,toc:f,Details:b},m="wrapper";function g(e){let{components:t,...l}=e;return(0,r.kt)(m,(0,i.Z)({},k,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Used to filter by a connection-based property. Fields are joined by AND"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"input UserListFilterInput {\n  all: UserFilterInput\n  any: UserFilterInput\n  none: UserFilterInput\n}\n")),(0,r.kt)("h3",{id:"fields"},"Fields"),(0,r.kt)("h4",{id:"code-style-fontweight-normal-userlistfilterinputballbcodeuserfilterinput-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"UserListFilterInput.",(0,r.kt)("b",null,"all"))),(0,r.kt)(u,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/user-filter-input"},(0,r.kt)("inlineCode",{parentName:"a"},"UserFilterInput"))," ",(0,r.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Filters for nodes where all of the related nodes match this filter")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-userlistfilterinputbanybcodeuserfilterinput-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"UserListFilterInput.",(0,r.kt)("b",null,"any"))),(0,r.kt)(u,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/user-filter-input"},(0,r.kt)("inlineCode",{parentName:"a"},"UserFilterInput"))," ",(0,r.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Filters for nodes where any of the related nodes match this filter")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-userlistfilterinputbnonebcodeuserfilterinput-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"UserListFilterInput.",(0,r.kt)("b",null,"none"))),(0,r.kt)(u,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/user-filter-input"},(0,r.kt)("inlineCode",{parentName:"a"},"UserFilterInput"))," ",(0,r.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Filters for nodes where none of the related nodes match this filter")),(0,r.kt)("h3",{id:"member-of"},"Member of"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/graphql/api-public/inputs/issue-filter-input"},(0,r.kt)("inlineCode",{parentName:"a"},"IssueFilterInput")),"  ",(0,r.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})))}g.isMDXComponent=!0}}]);