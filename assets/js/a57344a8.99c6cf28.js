"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[81310],{895682:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>m,Bullet:()=>c,Details:()=>u,SpecifiedBy:()=>p,assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>b});var s=a(487462),l=a(667294),n=a(603905);const o={id:"imsissue",title:"IMSIssue",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},d=void 0,i={unversionedId:"graphql/api-public/objects/imsissue",id:"graphql/api-public/objects/imsissue",title:"IMSIssue",description:"Issue on an IMS, represents an Issue synced to an IMS.",source:"@site/docs/graphql/api-public/objects/imsissue.mdx",sourceDirName:"graphql/api-public/objects",slug:"/graphql/api-public/objects/imsissue",permalink:"/gropius-docs/graphql/api-public/objects/imsissue",draft:!1,tags:[],version:"current",frontMatter:{id:"imsissue",title:"IMSIssue",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},sidebar:"graphqlSidebar"},r={},c=()=>(0,n.kt)(l.Fragment,null,(0,n.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,n.kt)(l.Fragment,null,"Specification",(0,n.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),m=e=>(0,n.kt)(l.Fragment,null,(0,n.kt)("span",{className:e.class},e.text)),b=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>IMSIssue.<b>hasPermission</b></code><Bullet /><code>Boolean!</code> <Badge class="badge badge--secondary" text="non-null"/> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-imsissuebhaspermissionbcodeboolean--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>IMSIssue.<b>id</b></code><Bullet /><code>ID!</code> <Badge class="badge badge--secondary" text="non-null"/> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-imsissuebidbcodeid--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>IMSIssue.<b>imsProject</b></code><Bullet /><code>IMSProject!</code> <Badge class="badge badge--secondary" text="non-null"/> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-imsissuebimsprojectbcodeimsproject--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>IMSIssue.<b>issue</b></code><Bullet /><code>Issue!</code> <Badge class="badge badge--secondary" text="non-null"/> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-imsissuebissuebcodeissue--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>IMSIssue.<b>template</b></code><Bullet /><code>IMSIssueTemplate!</code> <Badge class="badge badge--secondary" text="non-null"/> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-imsissuebtemplatebcodeimsissuetemplate--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>IMSIssue.<b>templatedField</b></code><Bullet /><code>JSON</code> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-imsissuebtemplatedfieldbcodejson-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>IMSIssue.<b>templatedFields</b></code><Bullet /><code>[JSONField!]!</code> <Badge class="badge badge--secondary" text="non-null"/> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-imsissuebtemplatedfieldsbcodejsonfield--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>IMSIssue.templatedFields.<b>prefixMatching</b></code><Bullet /><code>Boolean</code> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-imsissuetemplatedfieldsbprefixmatchingbcodeboolean-",level:5},{value:"Interfaces",id:"interfaces",level:3},{value:'<code>BaseNode</code> <Badge class="badge badge--secondary" text="interface"/>',id:"basenode-",level:4},{value:'<code>Node</code> <Badge class="badge badge--secondary" text="interface"/>',id:"node-",level:4},{value:'<code>TemplatedNode</code> <Badge class="badge badge--secondary" text="interface"/>',id:"templatednode-",level:4},{value:"Member of",id:"member-of",level:3}],u=e=>{let{dataOpen:t,dataClose:a,children:o,startOpen:d=!1}=e;const[i,r]=(0,l.useState)(d);return(0,n.kt)("details",(0,s.Z)({},i?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,n.kt)("summary",{onClick:e=>{e.preventDefault(),r((e=>!e))},style:{listStyle:"none"}},i?t:a),i&&o)},g={Bullet:c,SpecifiedBy:p,Badge:m,toc:b,Details:u},k="wrapper";function h(e){let{components:t,...a}=e;return(0,n.kt)(k,(0,s.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Issue on an IMS, represents an Issue synced to an IMS.\nThe representation of the Issue on the IMS depends on the type of IMS.\nREAD is granted if read is granted on ",(0,n.kt)("inlineCode",{parentName:"p"},"issue"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-graphql"},"type IMSIssue implements BaseNode, Node, TemplatedNode {\n  hasPermission(\n    permission: AllPermissionEntry\n  ): Boolean!\n  id: ID!\n  imsProject: IMSProject!\n  issue: Issue!\n  template: IMSIssueTemplate!\n  templatedField(\n    name: String!\n  ): JSON\n  templatedFields(\n    names: [String!]\n    prefixMatching: Boolean\n  ): [JSONField!]!\n}\n")),(0,n.kt)("h3",{id:"fields"},"Fields"),(0,n.kt)("h4",{id:"code-style-fontweight-normal-imsissuebhaspermissionbcodeboolean--"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"IMSIssue.",(0,n.kt)("b",null,"hasPermission"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/scalars/boolean"},(0,n.kt)("inlineCode",{parentName:"a"},"Boolean!"))," ",(0,n.kt)(m,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,n.kt)(m,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Checks if the current user has a specific permission on this Node"),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-imsissuehaspermissionbpermissionbcodeallpermissionentry-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"IMSIssue.hasPermission.",(0,n.kt)("b",null,"permission"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/graphql/api-public/enums/all-permission-entry"},(0,n.kt)("inlineCode",{parentName:"a"},"AllPermissionEntry"))," ",(0,n.kt)(m,{class:"badge badge--secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"The permission to check for")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-imsissuebidbcodeid--"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"IMSIssue.",(0,n.kt)("b",null,"id"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/scalars/id"},(0,n.kt)("inlineCode",{parentName:"a"},"ID!"))," ",(0,n.kt)(m,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,n.kt)(m,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"The unique id of this node")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-imsissuebimsprojectbcodeimsproject--"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"IMSIssue.",(0,n.kt)("b",null,"imsProject"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/objects/imsproject"},(0,n.kt)("inlineCode",{parentName:"a"},"IMSProject!"))," ",(0,n.kt)(m,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,n.kt)(m,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"The IMSProject the issue is synced with.")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-imsissuebissuebcodeissue--"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"IMSIssue.",(0,n.kt)("b",null,"issue"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/objects/issue"},(0,n.kt)("inlineCode",{parentName:"a"},"Issue!"))," ",(0,n.kt)(m,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,n.kt)(m,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"The Issue that is synced by the IMSProject")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-imsissuebtemplatebcodeimsissuetemplate--"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"IMSIssue.",(0,n.kt)("b",null,"template"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/objects/imsissue-template"},(0,n.kt)("inlineCode",{parentName:"a"},"IMSIssueTemplate!"))," ",(0,n.kt)(m,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,n.kt)(m,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"The Template of this Component.")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-imsissuebtemplatedfieldbcodejson-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"IMSIssue.",(0,n.kt)("b",null,"templatedField"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/scalars/json"},(0,n.kt)("inlineCode",{parentName:"a"},"JSON"))," ",(0,n.kt)(m,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Value of a field defined by the template. Error if such a field is not defined."),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-imsissuetemplatedfieldbnamebcodestring--"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"IMSIssue.templatedField.",(0,n.kt)("b",null,"name"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/graphql/api-public/scalars/string"},(0,n.kt)("inlineCode",{parentName:"a"},"String!"))," ",(0,n.kt)(m,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,n.kt)(m,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"Name of the extension field")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-imsissuebtemplatedfieldsbcodejsonfield--"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"IMSIssue.",(0,n.kt)("b",null,"templatedFields"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/objects/jsonfield"},(0,n.kt)("inlineCode",{parentName:"a"},"[JSONField!]!"))," ",(0,n.kt)(m,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,n.kt)(m,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"All templatedFields\nIf ",(0,n.kt)("inlineCode",{parentName:"p"},"names")," is provided, only those matching the name. If ",(0,n.kt)("inlineCode",{parentName:"p"},"prefixMatching")," is true, matching is done by\nprefix, otherwise by full name."),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-imsissuetemplatedfieldsbnamesbcodestring--"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"IMSIssue.templatedFields.",(0,n.kt)("b",null,"names"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/graphql/api-public/scalars/string"},(0,n.kt)("inlineCode",{parentName:"a"},"[String!]"))," ",(0,n.kt)(m,{class:"badge badge--secondary",text:"list",mdxType:"Badge"})," ",(0,n.kt)(m,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"Names of the templated fields. If not provided, all templatedFields.")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-imsissuetemplatedfieldsbprefixmatchingbcodeboolean-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"IMSIssue.templatedFields.",(0,n.kt)("b",null,"prefixMatching"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/graphql/api-public/scalars/boolean"},(0,n.kt)("inlineCode",{parentName:"a"},"Boolean"))," ",(0,n.kt)(m,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"If true, name matching is performed as prefix matching, otherwise as absolute match.\nDefaults to absolute matching")),(0,n.kt)("h3",{id:"interfaces"},"Interfaces"),(0,n.kt)("h4",{id:"basenode-"},(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/interfaces/base-node"},(0,n.kt)("inlineCode",{parentName:"a"},"BaseNode"))," ",(0,n.kt)(m,{class:"badge badge--secondary",text:"interface",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Shared extensions to the node type.")),(0,n.kt)("h4",{id:"node-"},(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/interfaces/node"},(0,n.kt)("inlineCode",{parentName:"a"},"Node"))," ",(0,n.kt)(m,{class:"badge badge--secondary",text:"interface",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Base class of all nodes")),(0,n.kt)("h4",{id:"templatednode-"},(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/interfaces/templated-node"},(0,n.kt)("inlineCode",{parentName:"a"},"TemplatedNode"))," ",(0,n.kt)(m,{class:"badge badge--secondary",text:"interface",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Interface for all types which support templates.")),(0,n.kt)("h3",{id:"member-of"},"Member of"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/graphql/api-public/objects/imsissue-connection"},(0,n.kt)("inlineCode",{parentName:"a"},"IMSIssueConnection")),"  ",(0,n.kt)(m,{class:"badge badge--secondary",text:"object",mdxType:"Badge"}),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/graphql/api-public/objects/imsissue-edge"},(0,n.kt)("inlineCode",{parentName:"a"},"IMSIssueEdge")),"  ",(0,n.kt)(m,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})))}h.isMDXComponent=!0}}]);