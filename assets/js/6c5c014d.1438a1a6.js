"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3522],{274918:(a,s,e)=>{e.r(s),e.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var n=e(487462),o=(e(667294),e(603905)),t=e(689417);const p='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":sync:dokkaHtmlPartial/main"><div class="symbol monospace"><span class="token keyword">fun </span><a href="parse-boolean-"><span class="token function">parseBoolean</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">input<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token operator">?</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin-stdlib/kotlin/-boolean/index.html">Boolean</a></div><p class="paragraph">Parse a json value into a string Converts the value to a boolean</p></div></div>\n',r={},i="parseBoolean",l={unversionedId:"api/sync/gropius.sync/-json-helper/parse-boolean-",id:"api/sync/gropius.sync/-json-helper/parse-boolean-",title:"parseBoolean",description:"",source:"@site/docs/api/sync/gropius.sync/-json-helper/parse-boolean-.mdx",sourceDirName:"api/sync/gropius.sync/-json-helper",slug:"/api/sync/gropius.sync/-json-helper/parse-boolean-",permalink:"/gropius-docs/api/sync/gropius.sync/-json-helper/parse-boolean-",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"objectMapper",permalink:"/gropius-docs/api/sync/gropius.sync/-json-helper/object-mapper-"},next:{title:"parseLabelStateMap",permalink:"/gropius-docs/api/sync/gropius.sync/-json-helper/parse-label-state-map-"}},c={},d=[],u={toc:d},k="wrapper";function m(a){let{components:s,...e}=a;return(0,o.kt)(k,(0,n.Z)({},u,e,{components:s,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"parseboolean"},"parseBoolean"),(0,o.kt)(t.Z,{dokkaHTML:p,mdxType:"DokkaComponent"}))}m.isMDXComponent=!0}}]);