"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[53710],{333188:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>s,Bullet:()=>c,Details:()=>m,SpecifiedBy:()=>u,assets:()=>p,contentTitle:()=>r,default:()=>k,frontMatter:()=>i,metadata:()=>o,toc:()=>f});var n=a(487462),d=a(667294),l=a(603905);const i={id:"added-artefact-event-filter-input",title:"AddedArtefactEventFilterInput",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},r=void 0,o={unversionedId:"graphql/api-internal/inputs/added-artefact-event-filter-input",id:"graphql/api-internal/inputs/added-artefact-event-filter-input",title:"AddedArtefactEventFilterInput",description:"Filter used to filter AddedArtefactEvent",source:"@site/docs/graphql/api-internal/inputs/added-artefact-event-filter-input.mdx",sourceDirName:"graphql/api-internal/inputs",slug:"/graphql/api-internal/inputs/added-artefact-event-filter-input",permalink:"/gropius-docs/graphql/api-internal/inputs/added-artefact-event-filter-input",draft:!1,tags:[],version:"current",frontMatter:{id:"added-artefact-event-filter-input",title:"AddedArtefactEventFilterInput",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},sidebar:"graphqlSidebar"},p={},c=()=>(0,l.kt)(d.Fragment,null,(0,l.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),u=e=>(0,l.kt)(d.Fragment,null,"Specification",(0,l.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),s=e=>(0,l.kt)(d.Fragment,null,(0,l.kt)("span",{className:e.class},e.text)),f=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>AddedArtefactEventFilterInput.<b>addedArtefact</b></code><Bullet /><code>ArtefactFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-addedartefacteventfilterinputbaddedartefactbcodeartefactfilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AddedArtefactEventFilterInput.<b>and</b></code><Bullet /><code>[AddedArtefactEventFilterInput!]</code> <Badge class="badge badge--secondary" text="list"/> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-addedartefacteventfilterinputbandbcodeaddedartefacteventfilterinput--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AddedArtefactEventFilterInput.<b>createdAt</b></code><Bullet /><code>DateTimeFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-addedartefacteventfilterinputbcreatedatbcodedatetimefilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AddedArtefactEventFilterInput.<b>createdBy</b></code><Bullet /><code>UserFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-addedartefacteventfilterinputbcreatedbybcodeuserfilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AddedArtefactEventFilterInput.<b>id</b></code><Bullet /><code>IDFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-addedartefacteventfilterinputbidbcodeidfilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AddedArtefactEventFilterInput.<b>issue</b></code><Bullet /><code>IssueFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-addedartefacteventfilterinputbissuebcodeissuefilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AddedArtefactEventFilterInput.<b>lastModifiedAt</b></code><Bullet /><code>DateTimeFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-addedartefacteventfilterinputblastmodifiedatbcodedatetimefilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AddedArtefactEventFilterInput.<b>lastModifiedBy</b></code><Bullet /><code>UserFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-addedartefacteventfilterinputblastmodifiedbybcodeuserfilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AddedArtefactEventFilterInput.<b>not</b></code><Bullet /><code>AddedArtefactEventFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-addedartefacteventfilterinputbnotbcodeaddedartefacteventfilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AddedArtefactEventFilterInput.<b>or</b></code><Bullet /><code>[AddedArtefactEventFilterInput!]</code> <Badge class="badge badge--secondary" text="list"/> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-addedartefacteventfilterinputborbcodeaddedartefacteventfilterinput--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AddedArtefactEventFilterInput.<b>parentItem</b></code><Bullet /><code>ParentTimelineItemFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-addedartefacteventfilterinputbparentitembcodeparenttimelineitemfilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AddedArtefactEventFilterInput.<b>timelineItemTypes</b></code><Bullet /><code>[TimelineItemType!]</code> <Badge class="badge badge--secondary" text="list"/> <Badge class="badge badge--secondary" text="enum"/>',id:"code-style-fontweight-normal-addedartefacteventfilterinputbtimelineitemtypesbcodetimelineitemtype--",level:4},{value:"Member of",id:"member-of",level:3}],m=e=>{let{dataOpen:t,dataClose:a,children:i,startOpen:r=!1}=e;const[o,p]=(0,d.useState)(r);return(0,l.kt)("details",(0,n.Z)({},o?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,l.kt)("summary",{onClick:e=>{e.preventDefault(),p((e=>!e))},style:{listStyle:"none"}},o?t:a),o&&i)},b={Bullet:c,SpecifiedBy:u,Badge:s,toc:f,Details:m},g="wrapper";function k(e){let{components:t,...a}=e;return(0,l.kt)(g,(0,n.Z)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Filter used to filter AddedArtefactEvent"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},"input AddedArtefactEventFilterInput {\n  addedArtefact: ArtefactFilterInput\n  and: [AddedArtefactEventFilterInput!]\n  createdAt: DateTimeFilterInput\n  createdBy: UserFilterInput\n  id: IDFilterInput\n  issue: IssueFilterInput\n  lastModifiedAt: DateTimeFilterInput\n  lastModifiedBy: UserFilterInput\n  not: AddedArtefactEventFilterInput\n  or: [AddedArtefactEventFilterInput!]\n  parentItem: ParentTimelineItemFilterInput\n  timelineItemTypes: [TimelineItemType!]\n}\n")),(0,l.kt)("h3",{id:"fields"},"Fields"),(0,l.kt)("h4",{id:"code-style-fontweight-normal-addedartefacteventfilterinputbaddedartefactbcodeartefactfilterinput-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"AddedArtefactEventFilterInput.",(0,l.kt)("b",null,"addedArtefact"))),(0,l.kt)(c,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-internal/inputs/artefact-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"ArtefactFilterInput"))," ",(0,l.kt)(s,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Filters for nodes where the related node match this filter")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-addedartefacteventfilterinputbandbcodeaddedartefacteventfilterinput--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"AddedArtefactEventFilterInput.",(0,l.kt)("b",null,"and"))),(0,l.kt)(c,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-internal/inputs/added-artefact-event-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"[AddedArtefactEventFilterInput!]"))," ",(0,l.kt)(s,{class:"badge badge--secondary",text:"list",mdxType:"Badge"})," ",(0,l.kt)(s,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Connects all subformulas via and")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-addedartefacteventfilterinputbcreatedatbcodedatetimefilterinput-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"AddedArtefactEventFilterInput.",(0,l.kt)("b",null,"createdAt"))),(0,l.kt)(c,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-internal/inputs/date-time-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"DateTimeFilterInput"))," ",(0,l.kt)(s,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Filter by createdAt")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-addedartefacteventfilterinputbcreatedbybcodeuserfilterinput-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"AddedArtefactEventFilterInput.",(0,l.kt)("b",null,"createdBy"))),(0,l.kt)(c,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-internal/inputs/user-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"UserFilterInput"))," ",(0,l.kt)(s,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Filters for nodes where the related node match this filter")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-addedartefacteventfilterinputbidbcodeidfilterinput-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"AddedArtefactEventFilterInput.",(0,l.kt)("b",null,"id"))),(0,l.kt)(c,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-internal/inputs/idfilter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"IDFilterInput"))," ",(0,l.kt)(s,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Filter by id")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-addedartefacteventfilterinputbissuebcodeissuefilterinput-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"AddedArtefactEventFilterInput.",(0,l.kt)("b",null,"issue"))),(0,l.kt)(c,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-internal/inputs/issue-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"IssueFilterInput"))," ",(0,l.kt)(s,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Filters for nodes where the related node match this filter")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-addedartefacteventfilterinputblastmodifiedatbcodedatetimefilterinput-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"AddedArtefactEventFilterInput.",(0,l.kt)("b",null,"lastModifiedAt"))),(0,l.kt)(c,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-internal/inputs/date-time-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"DateTimeFilterInput"))," ",(0,l.kt)(s,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Filter by lastModifiedAt")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-addedartefacteventfilterinputblastmodifiedbybcodeuserfilterinput-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"AddedArtefactEventFilterInput.",(0,l.kt)("b",null,"lastModifiedBy"))),(0,l.kt)(c,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-internal/inputs/user-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"UserFilterInput"))," ",(0,l.kt)(s,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Filters for nodes where the related node match this filter")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-addedartefacteventfilterinputbnotbcodeaddedartefacteventfilterinput-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"AddedArtefactEventFilterInput.",(0,l.kt)("b",null,"not"))),(0,l.kt)(c,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-internal/inputs/added-artefact-event-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"AddedArtefactEventFilterInput"))," ",(0,l.kt)(s,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Negates the subformula")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-addedartefacteventfilterinputborbcodeaddedartefacteventfilterinput--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"AddedArtefactEventFilterInput.",(0,l.kt)("b",null,"or"))),(0,l.kt)(c,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-internal/inputs/added-artefact-event-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"[AddedArtefactEventFilterInput!]"))," ",(0,l.kt)(s,{class:"badge badge--secondary",text:"list",mdxType:"Badge"})," ",(0,l.kt)(s,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Connects all subformulas via or")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-addedartefacteventfilterinputbparentitembcodeparenttimelineitemfilterinput-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"AddedArtefactEventFilterInput.",(0,l.kt)("b",null,"parentItem"))),(0,l.kt)(c,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-internal/inputs/parent-timeline-item-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"ParentTimelineItemFilterInput"))," ",(0,l.kt)(s,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Filters for nodes where the related node match this filter")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-addedartefacteventfilterinputbtimelineitemtypesbcodetimelineitemtype--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"AddedArtefactEventFilterInput.",(0,l.kt)("b",null,"timelineItemTypes"))),(0,l.kt)(c,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-internal/enums/timeline-item-type"},(0,l.kt)("inlineCode",{parentName:"a"},"[TimelineItemType!]"))," ",(0,l.kt)(s,{class:"badge badge--secondary",text:"list",mdxType:"Badge"})," ",(0,l.kt)(s,{class:"badge badge--secondary",text:"enum",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Filter for specific timeline items. Entries are joined by OR")),(0,l.kt)("h3",{id:"member-of"},"Member of"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/graphql/api-internal/inputs/added-artefact-event-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"AddedArtefactEventFilterInput")),"  ",(0,l.kt)(s,{class:"badge badge--secondary",text:"input",mdxType:"Badge"}),(0,l.kt)(c,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"p",href:"/graphql/api-internal/inputs/audited-node-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"AuditedNodeFilterInput")),"  ",(0,l.kt)(s,{class:"badge badge--secondary",text:"input",mdxType:"Badge"}),(0,l.kt)(c,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"p",href:"/graphql/api-internal/inputs/public-timeline-item-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"PublicTimelineItemFilterInput")),"  ",(0,l.kt)(s,{class:"badge badge--secondary",text:"input",mdxType:"Badge"}),(0,l.kt)(c,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"p",href:"/graphql/api-internal/inputs/timeline-item-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"TimelineItemFilterInput")),"  ",(0,l.kt)(s,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})))}k.isMDXComponent=!0}}]);