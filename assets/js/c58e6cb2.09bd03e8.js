"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[88176],{703253:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>v,contentTitle:()=>f,default:()=>_,frontMatter:()=>h,metadata:()=>k,toc:()=>b});var i=a(487462),s=(a(667294),a(603905)),n=a(258219),r=(a(162316),a(580667)),o=a.n(r),l=a(524228),c=a.n(l),p=a(909487),d=a(241429),u=a(905397),y=a(504667),m=a(809472),g=a(685162);const h={id:"strategy-instances-controller-delete-strategy-instance-18",title:"Delete a strategy instance",description:"Permanently deletes the login strategy instance with the given id.",sidebar_label:"Delete a strategy instance",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"StrategyInstancesController_deleteStrategyInstance_18",description:"Permanently deletes the login strategy instance with the given id.",parameters:[{name:"id",required:!0,in:"path",description:"The uuid string of an existing strategy instance to delete",schema:{format:"uuid",type:"string"}},{name:"type",required:!0,in:"path",description:"The strategy type name of which to search for the instance. Defaults to all types",schema:{type:"string"}}],responses:{200:{description:"If successfull, a default response with operation 'delete-strategyInstance'",content:{"application/json":{schema:{type:"object",properties:{operation:{type:"string",description:"A string representation of the operation performed",example:"self-register"},result:{description:'The result of the operation.\nDefaults to "success"',example:"success",default:"success",enum:["success","failed"],type:"string"},time:{format:"date-time",type:"string",description:"The time the operation was performed.\nDefaults to the current date+time",default:"2025-08-28T15:59:33.175Z"}},required:["operation","result","time"],title:"DefaultReturn"}}}},404:{description:"If no strategy with the given id (and type) are found"}},tags:["login-api"],security:[{bearer:[]}],method:"delete",path:"/auth/api/login/strategy-instance/{id}",servers:[],securitySchemes:{oauth2:{type:"oauth2",flows:{},description:"Access token provided by running the oauth flow (and if needed) registering/linking",bearerFormat:"JWT"},bearer:{scheme:"bearer",bearerFormat:"JWT",type:"apiKey",description:"Access token provided after running the oauth flow (and if needed registering/linking)"},api_key:{type:"apiKey",in:"header",name:"sync-api",description:"Secret Text shared between sync services and login service"}},info:{title:"Gropius Login Service",description:"API for login, registration and linking Gropius accounts to accounts on IMSs",version:"1.0.0",contact:{}},postman:{name:"Delete a strategy instance",description:{content:"Permanently deletes the login strategy instance with the given id.",type:"text/plain"},url:{path:["auth","api","login","strategy-instance",":id"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) The uuid string of an existing strategy instance to delete",type:"text/plain"},type:"any",value:"",key:"id"},{disabled:!1,description:{content:"(Required) The strategy type name of which to search for the instance. Defaults to all types",type:"text/plain"},type:"any",value:"",key:"type"}]},header:[{key:"Accept",value:"application/json"}],method:"DELETE",auth:{type:"apikey",apikey:[{type:"any",value:"<API Key Name>",key:"key"},{type:"any",value:"<API Key>",key:"value"},{type:"any",value:"header",key:"in"}]}}},sidebar_class_name:"delete api-method",info_path:"login-service/gropius-login-service",custom_edit_url:null},f=void 0,k={unversionedId:"login-service/strategy-instances-controller-delete-strategy-instance-18",id:"login-service/strategy-instances-controller-delete-strategy-instance-18",title:"Delete a strategy instance",description:"Permanently deletes the login strategy instance with the given id.",source:"@site/rest-docs/login-service/strategy-instances-controller-delete-strategy-instance-18.api.mdx",sourceDirName:"login-service",slug:"/login-service/strategy-instances-controller-delete-strategy-instance-18",permalink:"/gropius-docs/rest/login-service/strategy-instances-controller-delete-strategy-instance-18",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"strategy-instances-controller-delete-strategy-instance-18",title:"Delete a strategy instance",description:"Permanently deletes the login strategy instance with the given id.",sidebar_label:"Delete a strategy instance",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"StrategyInstancesController_deleteStrategyInstance_18",description:"Permanently deletes the login strategy instance with the given id.",parameters:[{name:"id",required:!0,in:"path",description:"The uuid string of an existing strategy instance to delete",schema:{format:"uuid",type:"string"}},{name:"type",required:!0,in:"path",description:"The strategy type name of which to search for the instance. Defaults to all types",schema:{type:"string"}}],responses:{200:{description:"If successfull, a default response with operation 'delete-strategyInstance'",content:{"application/json":{schema:{type:"object",properties:{operation:{type:"string",description:"A string representation of the operation performed",example:"self-register"},result:{description:'The result of the operation.\nDefaults to "success"',example:"success",default:"success",enum:["success","failed"],type:"string"},time:{format:"date-time",type:"string",description:"The time the operation was performed.\nDefaults to the current date+time",default:"2025-08-28T15:59:33.175Z"}},required:["operation","result","time"],title:"DefaultReturn"}}}},404:{description:"If no strategy with the given id (and type) are found"}},tags:["login-api"],security:[{bearer:[]}],method:"delete",path:"/auth/api/login/strategy-instance/{id}",servers:[],securitySchemes:{oauth2:{type:"oauth2",flows:{},description:"Access token provided by running the oauth flow (and if needed) registering/linking",bearerFormat:"JWT"},bearer:{scheme:"bearer",bearerFormat:"JWT",type:"apiKey",description:"Access token provided after running the oauth flow (and if needed registering/linking)"},api_key:{type:"apiKey",in:"header",name:"sync-api",description:"Secret Text shared between sync services and login service"}},info:{title:"Gropius Login Service",description:"API for login, registration and linking Gropius accounts to accounts on IMSs",version:"1.0.0",contact:{}},postman:{name:"Delete a strategy instance",description:{content:"Permanently deletes the login strategy instance with the given id.",type:"text/plain"},url:{path:["auth","api","login","strategy-instance",":id"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) The uuid string of an existing strategy instance to delete",type:"text/plain"},type:"any",value:"",key:"id"},{disabled:!1,description:{content:"(Required) The strategy type name of which to search for the instance. Defaults to all types",type:"text/plain"},type:"any",value:"",key:"type"}]},header:[{key:"Accept",value:"application/json"}],method:"DELETE",auth:{type:"apikey",apikey:[{type:"any",value:"<API Key Name>",key:"key"},{type:"any",value:"<API Key>",key:"value"},{type:"any",value:"header",key:"in"}]}}},sidebar_class_name:"delete api-method",info_path:"login-service/gropius-login-service",custom_edit_url:null},sidebar:"restSidebar",previous:{title:"Edit an existing strategy instance",permalink:"/gropius-docs/rest/login-service/strategy-instances-controller-update-strategy-instance-16"},next:{title:"Get one strategy instance",permalink:"/gropius-docs/rest/login-service/strategy-instances-controller-get-strategy-instance-13"}},v={},b=[{value:"Request",id:"request",level:2}],T={toc:b},x="wrapper";function _(e){let{components:t,...a}=e;return(0,s.kt)(x,(0,i.Z)({},T,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{className:"openapi__heading"},"Delete a strategy instance"),(0,s.kt)(o(),{method:"delete",path:"/auth/api/login/strategy-instance/{id}",mdxType:"MethodEndpoint"}),(0,s.kt)(c(),{infoPath:"login-service/gropius-login-service",mdxType:"SecuritySchemes"}),(0,s.kt)("p",null,"Permanently deletes the login strategy instance with the given id."),(0,s.kt)("h2",{id:"request"},"Request"),(0,s.kt)("details",{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{}},(0,s.kt)("h3",{className:"openapi-markdown__details-summary-header-params"},"Path Parameters")),(0,s.kt)("div",null,(0,s.kt)("ul",null,(0,s.kt)(d.Z,{className:"paramsItem",param:{name:"id",required:!0,in:"path",description:"The uuid string of an existing strategy instance to delete",schema:{format:"uuid",type:"string"}},mdxType:"ParamsItem"}),(0,s.kt)(d.Z,{className:"paramsItem",param:{name:"type",required:!0,in:"path",description:"The strategy type name of which to search for the instance. Defaults to all types",schema:{type:"string"}},mdxType:"ParamsItem"})))),(0,s.kt)("div",null,(0,s.kt)("div",null,(0,s.kt)(n.Z,{mdxType:"ApiTabs"},(0,s.kt)(g.default,{label:"200",value:"200",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"If successfull, a default response with operation 'delete-strategyInstance'")),(0,s.kt)("div",null,(0,s.kt)(p.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(g.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(m.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(g.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(y.Z,{collapsible:!1,name:"operation",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"A string representation of the operation performed",example:"self-register"},mdxType:"SchemaItem"}),(0,s.kt)(y.Z,{collapsible:!1,name:"result",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`success`, `failed`]",schema:{description:'The result of the operation.\nDefaults to "success"',example:"success",default:"success",enum:["success","failed"],type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(y.Z,{collapsible:!1,name:"time",required:!0,schemaName:"date-time",qualifierMessage:void 0,schema:{format:"date-time",type:"string",description:"The time the operation was performed.\nDefaults to the current date+time",default:"2025-08-28T15:59:33.175Z"},mdxType:"SchemaItem"})))),(0,s.kt)(g.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(u.Z,{responseExample:'{\n  "operation": "self-register",\n  "result": "success",\n  "time": "2025-08-28T16:01:27.628Z"\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,s.kt)(g.default,{label:"404",value:"404",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"If no strategy with the given id (and type) are found")),(0,s.kt)("div",null))))))}_.isMDXComponent=!0}}]);