"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[14726],{736277:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>v,contentTitle:()=>g,default:()=>w,frontMatter:()=>f,metadata:()=>k,toc:()=>b});var i=a(487462),n=(a(667294),a(603905)),o=a(258219),s=(a(162316),a(580667)),r=a.n(s),p=a(524228),d=a.n(p),l=a(909487),c=a(241429),u=a(905397),m=a(504667),h=a(809472),y=a(685162);const f={id:"update-action-controller-update-action-35",title:"Update a login data with a specific action",description:"Update a login data with a specific action",sidebar_label:"Update a login data with a specific action",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"UpdateActionController_updateAction_35",parameters:[{name:"id",required:!0,in:"path",description:"The id of the login data to update",schema:{type:"string"}},{name:"action",required:!0,in:"path",description:"The action to perform on the login data",schema:{type:"string"}}],responses:{200:{description:"If update action succeeded, the default response",content:{"application/json":{schema:{type:"object",properties:{operation:{type:"string",description:"A string representation of the operation performed",example:"self-register"},result:{description:'The result of the operation.\nDefaults to "success"',example:"success",default:"success",enum:["success","failed"],type:"string"},time:{format:"date-time",type:"string",description:"The time the operation was performed.\nDefaults to the current date+time",default:"2025-08-28T15:59:33.175Z"}},required:["operation","result","time"],title:"DefaultReturn"}}}},400:{description:"If any of the input values are invalid"},404:{description:"If no login data with the given id are found"}},tags:["internal-api"],security:[{bearer:[]}],description:"Update a login data with a specific action",method:"put",path:"/auth/api/internal/update-action/{id}/{action}",servers:[],securitySchemes:{oauth2:{type:"oauth2",flows:{},description:"Access token provided by running the oauth flow (and if needed) registering/linking",bearerFormat:"JWT"},bearer:{scheme:"bearer",bearerFormat:"JWT",type:"apiKey",description:"Access token provided after running the oauth flow (and if needed registering/linking)"},api_key:{type:"apiKey",in:"header",name:"sync-api",description:"Secret Text shared between sync services and login service"}},info:{title:"Gropius Login Service",description:"API for login, registration and linking Gropius accounts to accounts on IMSs",version:"1.0.0",contact:{}},postman:{name:"Update a login data with a specific action",description:{type:"text/plain"},url:{path:["auth","api","internal","update-action",":id",":action"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) The id of the login data to update",type:"text/plain"},type:"any",value:"",key:"id"},{disabled:!1,description:{content:"(Required) The action to perform on the login data",type:"text/plain"},type:"any",value:"",key:"action"}]},header:[{key:"Accept",value:"application/json"}],method:"PUT",auth:{type:"apikey",apikey:[{type:"any",value:"<API Key Name>",key:"key"},{type:"any",value:"<API Key>",key:"value"},{type:"any",value:"header",key:"in"}]}}},sidebar_class_name:"put api-method",info_path:"login-service/gropius-login-service",custom_edit_url:null},g=void 0,k={unversionedId:"login-service/update-action-controller-update-action-35",id:"login-service/update-action-controller-update-action-35",title:"Update a login data with a specific action",description:"Update a login data with a specific action",source:"@site/rest-docs/login-service/update-action-controller-update-action-35.api.mdx",sourceDirName:"login-service",slug:"/login-service/update-action-controller-update-action-35",permalink:"/gropius-docs/rest/login-service/update-action-controller-update-action-35",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"update-action-controller-update-action-35",title:"Update a login data with a specific action",description:"Update a login data with a specific action",sidebar_label:"Update a login data with a specific action",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"UpdateActionController_updateAction_35",parameters:[{name:"id",required:!0,in:"path",description:"The id of the login data to update",schema:{type:"string"}},{name:"action",required:!0,in:"path",description:"The action to perform on the login data",schema:{type:"string"}}],responses:{200:{description:"If update action succeeded, the default response",content:{"application/json":{schema:{type:"object",properties:{operation:{type:"string",description:"A string representation of the operation performed",example:"self-register"},result:{description:'The result of the operation.\nDefaults to "success"',example:"success",default:"success",enum:["success","failed"],type:"string"},time:{format:"date-time",type:"string",description:"The time the operation was performed.\nDefaults to the current date+time",default:"2025-08-28T15:59:33.175Z"}},required:["operation","result","time"],title:"DefaultReturn"}}}},400:{description:"If any of the input values are invalid"},404:{description:"If no login data with the given id are found"}},tags:["internal-api"],security:[{bearer:[]}],description:"Update a login data with a specific action",method:"put",path:"/auth/api/internal/update-action/{id}/{action}",servers:[],securitySchemes:{oauth2:{type:"oauth2",flows:{},description:"Access token provided by running the oauth flow (and if needed) registering/linking",bearerFormat:"JWT"},bearer:{scheme:"bearer",bearerFormat:"JWT",type:"apiKey",description:"Access token provided after running the oauth flow (and if needed registering/linking)"},api_key:{type:"apiKey",in:"header",name:"sync-api",description:"Secret Text shared between sync services and login service"}},info:{title:"Gropius Login Service",description:"API for login, registration and linking Gropius accounts to accounts on IMSs",version:"1.0.0",contact:{}},postman:{name:"Update a login data with a specific action",description:{type:"text/plain"},url:{path:["auth","api","internal","update-action",":id",":action"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) The id of the login data to update",type:"text/plain"},type:"any",value:"",key:"id"},{disabled:!1,description:{content:"(Required) The action to perform on the login data",type:"text/plain"},type:"any",value:"",key:"action"}]},header:[{key:"Accept",value:"application/json"}],method:"PUT",auth:{type:"apikey",apikey:[{type:"any",value:"<API Key Name>",key:"key"},{type:"any",value:"<API Key>",key:"value"},{type:"any",value:"header",key:"in"}]}}},sidebar_class_name:"put api-method",info_path:"login-service/gropius-login-service",custom_edit_url:null},sidebar:"restSidebar",previous:{title:"Copmplete a registration",permalink:"/gropius-docs/rest/login-service/auth-endpoints-controller-register-34"}},v={},b=[{value:"Request",id:"request",level:2}],T={toc:b},_="wrapper";function w(e){let{components:t,...a}=e;return(0,n.kt)(_,(0,i.Z)({},T,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{className:"openapi__heading"},"Update a login data with a specific action"),(0,n.kt)(r(),{method:"put",path:"/auth/api/internal/update-action/{id}/{action}",mdxType:"MethodEndpoint"}),(0,n.kt)(d(),{infoPath:"login-service/gropius-login-service",mdxType:"SecuritySchemes"}),(0,n.kt)("p",null,"Update a login data with a specific action"),(0,n.kt)("h2",{id:"request"},"Request"),(0,n.kt)("details",{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0},(0,n.kt)("summary",{style:{}},(0,n.kt)("h3",{className:"openapi-markdown__details-summary-header-params"},"Path Parameters")),(0,n.kt)("div",null,(0,n.kt)("ul",null,(0,n.kt)(c.Z,{className:"paramsItem",param:{name:"id",required:!0,in:"path",description:"The id of the login data to update",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,n.kt)(c.Z,{className:"paramsItem",param:{name:"action",required:!0,in:"path",description:"The action to perform on the login data",schema:{type:"string"}},mdxType:"ParamsItem"})))),(0,n.kt)("div",null,(0,n.kt)("div",null,(0,n.kt)(o.Z,{mdxType:"ApiTabs"},(0,n.kt)(y.default,{label:"200",value:"200",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"If update action succeeded, the default response")),(0,n.kt)("div",null,(0,n.kt)(l.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,n.kt)(y.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,n.kt)(h.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,n.kt)(y.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,n.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,n.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,n.kt)("strong",null,"Schema")),(0,n.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,n.kt)("ul",{style:{marginLeft:"1rem"}},(0,n.kt)(m.Z,{collapsible:!1,name:"operation",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"A string representation of the operation performed",example:"self-register"},mdxType:"SchemaItem"}),(0,n.kt)(m.Z,{collapsible:!1,name:"result",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`success`, `failed`]",schema:{description:'The result of the operation.\nDefaults to "success"',example:"success",default:"success",enum:["success","failed"],type:"string"},mdxType:"SchemaItem"}),(0,n.kt)(m.Z,{collapsible:!1,name:"time",required:!0,schemaName:"date-time",qualifierMessage:void 0,schema:{format:"date-time",type:"string",description:"The time the operation was performed.\nDefaults to the current date+time",default:"2025-08-28T15:59:33.175Z"},mdxType:"SchemaItem"})))),(0,n.kt)(y.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,n.kt)(u.Z,{responseExample:'{\n  "operation": "self-register",\n  "result": "success",\n  "time": "2025-08-28T16:01:27.636Z"\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,n.kt)(y.default,{label:"400",value:"400",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"If any of the input values are invalid")),(0,n.kt)("div",null)),(0,n.kt)(y.default,{label:"404",value:"404",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"If no login data with the given id are found")),(0,n.kt)("div",null))))))}w.isMDXComponent=!0}}]);