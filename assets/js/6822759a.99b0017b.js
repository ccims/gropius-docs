"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[64218],{364682:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>p,Bullet:()=>d,Details:()=>h,SpecifiedBy:()=>u,assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>n,metadata:()=>o,toc:()=>g});var s=a(487462),r=a(667294),l=a(603905);const n={id:"search-users",title:"searchUsers",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},i=void 0,o={unversionedId:"graphql/api-public/queries/search-users",id:"graphql/api-public/queries/search-users",title:"searchUsers",description:"Search for nodes of type User",source:"@site/docs/graphql/api-public/queries/search-users.mdx",sourceDirName:"graphql/api-public/queries",slug:"/graphql/api-public/queries/search-users",permalink:"/gropius-docs/graphql/api-public/queries/search-users",draft:!1,tags:[],version:"current",frontMatter:{id:"search-users",title:"searchUsers",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},sidebar:"graphqlSidebar"},c={},d=()=>(0,l.kt)(r.Fragment,null,(0,l.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),u=e=>(0,l.kt)(r.Fragment,null,"Specification",(0,l.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),p=e=>(0,l.kt)(r.Fragment,null,(0,l.kt)("span",{className:e.class},e.text)),g=[{value:"Arguments",id:"arguments",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>searchUsers.<b>filter</b></code><Bullet /><code>UserFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-searchusersbfilterbcodeuserfilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>searchUsers.<b>first</b></code><Bullet /><code>Int!</code> <Badge class="badge badge--secondary" text="non-null"/> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-searchusersbfirstbcodeint--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>searchUsers.<b>query</b></code><Bullet /><code>String!</code> <Badge class="badge badge--secondary" text="non-null"/> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-searchusersbquerybcodestring--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>searchUsers.<b>skip</b></code><Bullet /><code>Int</code> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-searchusersbskipbcodeint-",level:4},{value:"Type",id:"type",level:3},{value:'<code>User</code> <Badge class="badge badge--secondary" text="interface"/>',id:"user-",level:4}],h=e=>{let{dataOpen:t,dataClose:a,children:n,startOpen:i=!1}=e;const[o,c]=(0,r.useState)(i);return(0,l.kt)("details",(0,s.Z)({},o?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,l.kt)("summary",{onClick:e=>{e.preventDefault(),c((e=>!e))},style:{listStyle:"none"}},o?t:a),o&&n)},b={Bullet:d,SpecifiedBy:u,Badge:p,toc:g,Details:h},k="wrapper";function m(e){let{components:t,...a}=e;return(0,l.kt)(k,(0,s.Z)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Search for nodes of type User"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},"searchUsers(\n  filter: UserFilterInput\n  first: Int!\n  query: String!\n  skip: Int\n): [User!]!\n")),(0,l.kt)("h3",{id:"arguments"},"Arguments"),(0,l.kt)("h4",{id:"code-style-fontweight-normal-searchusersbfilterbcodeuserfilterinput-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"searchUsers.",(0,l.kt)("b",null,"filter"))),(0,l.kt)(d,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/user-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"UserFilterInput"))," ",(0,l.kt)(p,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Filter for specific items")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-searchusersbfirstbcodeint--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"searchUsers.",(0,l.kt)("b",null,"first"))),(0,l.kt)(d,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-public/scalars/int"},(0,l.kt)("inlineCode",{parentName:"a"},"Int!"))," ",(0,l.kt)(p,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,l.kt)(p,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Get the first n items.")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-searchusersbquerybcodestring--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"searchUsers.",(0,l.kt)("b",null,"query"))),(0,l.kt)(d,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-public/scalars/string"},(0,l.kt)("inlineCode",{parentName:"a"},"String!"))," ",(0,l.kt)(p,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,l.kt)(p,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Search query nodes must match")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-searchusersbskipbcodeint-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"searchUsers.",(0,l.kt)("b",null,"skip"))),(0,l.kt)(d,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-public/scalars/int"},(0,l.kt)("inlineCode",{parentName:"a"},"Int"))," ",(0,l.kt)(p,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Skips n items.")),(0,l.kt)("h3",{id:"type"},"Type"),(0,l.kt)("h4",{id:"user-"},(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-public/interfaces/user"},(0,l.kt)("inlineCode",{parentName:"a"},"User"))," ",(0,l.kt)(p,{class:"badge badge--secondary",text:"interface",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"A user known to the Gropius System.\nThis might be a user that registered directly, or a user the systems know via a sync adapter.\nA user can create AuditedNodes, participate in Issues and be assigned to Issues.\nREAD is always granted.")))}m.isMDXComponent=!0}}]);