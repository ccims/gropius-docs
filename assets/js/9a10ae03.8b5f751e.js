"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[88712],{890607:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>c,Bullet:()=>p,Details:()=>m,SpecifiedBy:()=>s,assets:()=>u,contentTitle:()=>r,default:()=>b,frontMatter:()=>l,metadata:()=>o,toc:()=>f});var i=n(487462),d=n(667294),a=n(603905);const l={id:"audited-node-list-filter-input",title:"AuditedNodeListFilterInput",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},r=void 0,o={unversionedId:"graphql/api-internal/inputs/audited-node-list-filter-input",id:"graphql/api-internal/inputs/audited-node-list-filter-input",title:"AuditedNodeListFilterInput",description:"Used to filter by a connection-based property. Fields are joined by AND",source:"@site/docs/graphql/api-internal/inputs/audited-node-list-filter-input.mdx",sourceDirName:"graphql/api-internal/inputs",slug:"/graphql/api-internal/inputs/audited-node-list-filter-input",permalink:"/gropius-docs/graphql/api-internal/inputs/audited-node-list-filter-input",draft:!1,tags:[],version:"current",frontMatter:{id:"audited-node-list-filter-input",title:"AuditedNodeListFilterInput",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},sidebar:"graphqlSidebar"},u={},p=()=>(0,a.kt)(d.Fragment,null,(0,a.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),s=e=>(0,a.kt)(d.Fragment,null,"Specification",(0,a.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),c=e=>(0,a.kt)(d.Fragment,null,(0,a.kt)("span",{className:e.class},e.text)),f=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>AuditedNodeListFilterInput.<b>all</b></code><Bullet /><code>AuditedNodeFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-auditednodelistfilterinputballbcodeauditednodefilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AuditedNodeListFilterInput.<b>any</b></code><Bullet /><code>AuditedNodeFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-auditednodelistfilterinputbanybcodeauditednodefilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AuditedNodeListFilterInput.<b>none</b></code><Bullet /><code>AuditedNodeFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-auditednodelistfilterinputbnonebcodeauditednodefilterinput-",level:4},{value:"Member of",id:"member-of",level:3}],m=e=>{let{dataOpen:t,dataClose:n,children:l,startOpen:r=!1}=e;const[o,u]=(0,d.useState)(r);return(0,a.kt)("details",(0,i.Z)({},o?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,a.kt)("summary",{onClick:e=>{e.preventDefault(),u((e=>!e))},style:{listStyle:"none"}},o?t:n),o&&l)},g={Bullet:p,SpecifiedBy:s,Badge:c,toc:f,Details:m},k="wrapper";function b(e){let{components:t,...n}=e;return(0,a.kt)(k,(0,i.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Used to filter by a connection-based property. Fields are joined by AND"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"input AuditedNodeListFilterInput {\n  all: AuditedNodeFilterInput\n  any: AuditedNodeFilterInput\n  none: AuditedNodeFilterInput\n}\n")),(0,a.kt)("h3",{id:"fields"},"Fields"),(0,a.kt)("h4",{id:"code-style-fontweight-normal-auditednodelistfilterinputballbcodeauditednodefilterinput-"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"AuditedNodeListFilterInput.",(0,a.kt)("b",null,"all"))),(0,a.kt)(p,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"h4",href:"/graphql/api-internal/inputs/audited-node-filter-input"},(0,a.kt)("inlineCode",{parentName:"a"},"AuditedNodeFilterInput"))," ",(0,a.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Filters for nodes where all of the related nodes match this filter")),(0,a.kt)("h4",{id:"code-style-fontweight-normal-auditednodelistfilterinputbanybcodeauditednodefilterinput-"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"AuditedNodeListFilterInput.",(0,a.kt)("b",null,"any"))),(0,a.kt)(p,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"h4",href:"/graphql/api-internal/inputs/audited-node-filter-input"},(0,a.kt)("inlineCode",{parentName:"a"},"AuditedNodeFilterInput"))," ",(0,a.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Filters for nodes where any of the related nodes match this filter")),(0,a.kt)("h4",{id:"code-style-fontweight-normal-auditednodelistfilterinputbnonebcodeauditednodefilterinput-"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"AuditedNodeListFilterInput.",(0,a.kt)("b",null,"none"))),(0,a.kt)(p,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"h4",href:"/graphql/api-internal/inputs/audited-node-filter-input"},(0,a.kt)("inlineCode",{parentName:"a"},"AuditedNodeFilterInput"))," ",(0,a.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Filters for nodes where none of the related nodes match this filter")),(0,a.kt)("h3",{id:"member-of"},"Member of"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/graphql/api-internal/inputs/gropius-user-filter-input"},(0,a.kt)("inlineCode",{parentName:"a"},"GropiusUserFilterInput")),"  ",(0,a.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"}),(0,a.kt)(p,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"p",href:"/graphql/api-internal/inputs/imsuser-filter-input"},(0,a.kt)("inlineCode",{parentName:"a"},"IMSUserFilterInput")),"  ",(0,a.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"}),(0,a.kt)(p,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"p",href:"/graphql/api-internal/inputs/user-filter-input"},(0,a.kt)("inlineCode",{parentName:"a"},"UserFilterInput")),"  ",(0,a.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})))}b.isMDXComponent=!0}}]);