"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[12414],{764873:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>y,contentTitle:()=>g,default:()=>v,frontMatter:()=>u,metadata:()=>h,toc:()=>b});var s=i(487462),r=(i(667294),i(603905)),n=i(258219),a=(i(162316),i(580667)),o=i.n(a),p=i(524228),l=i.n(p),d=i(909487),m=(i(241429),i(905397),i(504667)),c=(i(809472),i(685162));const u={id:"auth-endpoints-controller-register-34",title:"Copmplete a registration",description:"Copmplete a registration",sidebar_label:"Copmplete a registration",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"AuthEndpointsController_register_34",parameters:[],requestBody:{required:!0,content:{"application/json":{schema:{type:"object",properties:{register_token:{type:"string",description:'The register token issued during as result of the oauth registration flow.\nScope of the token must contain "login-register".\n\nMust be given.',example:"registration.token.jwt"},state:{type:"string",description:"The state of the oauth flow"},username:{type:"string",description:"The username to set for the new user.\nMust be given and cannot be empty",example:"testUser"},displayName:{type:"string",description:"The name to display in the UI for the new user.\nMust be given and can't be empty",example:"Test User"},email:{type:"string",description:"The email of the new user.\nCan be ommitted, but if given can't be empty.",example:"test-user@example.com"}},required:["register_token","state","username","displayName"],title:"SelfRegisterUserInput"}}}},responses:{201:{description:""}},tags:["internal-api"],description:"Copmplete a registration",method:"post",path:"/auth/api/internal/auth/register",servers:[],securitySchemes:{oauth2:{type:"oauth2",flows:{},description:"Access token provided by running the oauth flow (and if needed) registering/linking",bearerFormat:"JWT"},bearer:{scheme:"bearer",bearerFormat:"JWT",type:"apiKey",description:"Access token provided after running the oauth flow (and if needed registering/linking)"},api_key:{type:"apiKey",in:"header",name:"sync-api",description:"Secret Text shared between sync services and login service"}},jsonRequestBodyExample:{register_token:"registration.token.jwt",state:"string",username:"testUser",displayName:"Test User",email:"test-user@example.com"},info:{title:"Gropius Login Service",description:"API for login, registration and linking Gropius accounts to accounts on IMSs",version:"1.0.0",contact:{}},postman:{name:"Copmplete a registration",description:{type:"text/plain"},url:{path:["auth","api","internal","auth","register"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"login-service/gropius-login-service",custom_edit_url:null},g=void 0,h={unversionedId:"login-service/auth-endpoints-controller-register-34",id:"login-service/auth-endpoints-controller-register-34",title:"Copmplete a registration",description:"Copmplete a registration",source:"@site/rest-docs/login-service/auth-endpoints-controller-register-34.api.mdx",sourceDirName:"login-service",slug:"/login-service/auth-endpoints-controller-register-34",permalink:"/gropius-docs/rest/login-service/auth-endpoints-controller-register-34",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"auth-endpoints-controller-register-34",title:"Copmplete a registration",description:"Copmplete a registration",sidebar_label:"Copmplete a registration",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"AuthEndpointsController_register_34",parameters:[],requestBody:{required:!0,content:{"application/json":{schema:{type:"object",properties:{register_token:{type:"string",description:'The register token issued during as result of the oauth registration flow.\nScope of the token must contain "login-register".\n\nMust be given.',example:"registration.token.jwt"},state:{type:"string",description:"The state of the oauth flow"},username:{type:"string",description:"The username to set for the new user.\nMust be given and cannot be empty",example:"testUser"},displayName:{type:"string",description:"The name to display in the UI for the new user.\nMust be given and can't be empty",example:"Test User"},email:{type:"string",description:"The email of the new user.\nCan be ommitted, but if given can't be empty.",example:"test-user@example.com"}},required:["register_token","state","username","displayName"],title:"SelfRegisterUserInput"}}}},responses:{201:{description:""}},tags:["internal-api"],description:"Copmplete a registration",method:"post",path:"/auth/api/internal/auth/register",servers:[],securitySchemes:{oauth2:{type:"oauth2",flows:{},description:"Access token provided by running the oauth flow (and if needed) registering/linking",bearerFormat:"JWT"},bearer:{scheme:"bearer",bearerFormat:"JWT",type:"apiKey",description:"Access token provided after running the oauth flow (and if needed registering/linking)"},api_key:{type:"apiKey",in:"header",name:"sync-api",description:"Secret Text shared between sync services and login service"}},jsonRequestBodyExample:{register_token:"registration.token.jwt",state:"string",username:"testUser",displayName:"Test User",email:"test-user@example.com"},info:{title:"Gropius Login Service",description:"API for login, registration and linking Gropius accounts to accounts on IMSs",version:"1.0.0",contact:{}},postman:{name:"Copmplete a registration",description:{type:"text/plain"},url:{path:["auth","api","internal","auth","register"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"login-service/gropius-login-service",custom_edit_url:null},sidebar:"restSidebar",previous:{title:"Submit endpoint for a strategy instance",permalink:"/gropius-docs/rest/login-service/auth-endpoints-controller-login-strategy-submit-33"},next:{title:"Update a login data with a specific action",permalink:"/gropius-docs/rest/login-service/update-action-controller-update-action-35"}},y={},b=[{value:"Request",id:"request",level:2}],f={toc:b},k="wrapper";function v(e){let{components:t,...i}=e;return(0,r.kt)(k,(0,s.Z)({},f,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{className:"openapi__heading"},"Copmplete a registration"),(0,r.kt)(o(),{method:"post",path:"/auth/api/internal/auth/register",mdxType:"MethodEndpoint"}),(0,r.kt)(l(),{infoPath:"login-service/gropius-login-service",mdxType:"SecuritySchemes"}),(0,r.kt)("p",null,"Copmplete a registration"),(0,r.kt)("h2",{id:"request"},"Request"),(0,r.kt)(d.Z,{className:"openapi-tabs__mime",mdxType:"MimeTabs"},(0,r.kt)(c.default,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,r.kt)("details",{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{},className:"openapi-markdown__details-summary-mime"},(0,r.kt)("h3",{className:"openapi-markdown__details-summary-header-body"},"Body"),(0,r.kt)("strong",{className:"openapi-schema__required"},"required")),(0,r.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.kt)("ul",{style:{marginLeft:"1rem"}},(0,r.kt)(m.Z,{collapsible:!1,name:"register_token",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:'The register token issued during as result of the oauth registration flow.\nScope of the token must contain "login-register".\n\nMust be given.',example:"registration.token.jwt"},mdxType:"SchemaItem"}),(0,r.kt)(m.Z,{collapsible:!1,name:"state",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The state of the oauth flow"},mdxType:"SchemaItem"}),(0,r.kt)(m.Z,{collapsible:!1,name:"username",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The username to set for the new user.\nMust be given and cannot be empty",example:"testUser"},mdxType:"SchemaItem"}),(0,r.kt)(m.Z,{collapsible:!1,name:"displayName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The name to display in the UI for the new user.\nMust be given and can't be empty",example:"Test User"},mdxType:"SchemaItem"}),(0,r.kt)(m.Z,{collapsible:!1,name:"email",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The email of the new user.\nCan be ommitted, but if given can't be empty.",example:"test-user@example.com"},mdxType:"SchemaItem"}))))),(0,r.kt)("div",null,(0,r.kt)("div",null,(0,r.kt)(n.Z,{mdxType:"ApiTabs"},(0,r.kt)(c.default,{label:"201",value:"201",mdxType:"TabItem"},(0,r.kt)("div",null),(0,r.kt)("div",null))))))}v.isMDXComponent=!0}}]);