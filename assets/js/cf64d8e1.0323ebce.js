"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[97865],{645391:(s,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>c,default:()=>k,frontMatter:()=>r,metadata:()=>u,toc:()=>d});var a=n(487462),t=(n(667294),n(603905)),i=n(689417);const o='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":sync-github:dokkaHtmlPartial/main"><div class="symbol monospace"><span class="token keyword">open </span><span class="token keyword">override </span><span class="token keyword">fun </span><a href="configure-tasks-"><span class="token function">configureTasks</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">taskRegistrar<span class="token operator">: </span><span data-unresolved-link="org.springframework.scheduling.config/ScheduledTaskRegistrar///PointingToDeclaration/">ScheduledTaskRegistrar</span></span></span><span class="token punctuation">)</span></div></div></div>\n',r={},c="configureTasks",u={unversionedId:"api/sync-github/gropius.sync.github/-scheduler/configure-tasks-",id:"api/sync-github/gropius.sync.github/-scheduler/configure-tasks-",title:"configureTasks",description:"",source:"@site/docs/api/sync-github/gropius.sync.github/-scheduler/configure-tasks-.mdx",sourceDirName:"api/sync-github/gropius.sync.github/-scheduler",slug:"/api/sync-github/gropius.sync.github/-scheduler/configure-tasks-",permalink:"/gropius-docs/api/sync-github/gropius.sync.github/-scheduler/configure-tasks-",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Scheduler",permalink:"/gropius-docs/api/sync-github/gropius.sync.github/-scheduler/-scheduler-"},next:{title:"TODOTimelineItemConversionInformation",permalink:"/gropius-docs/api/sync-github/gropius.sync.github/-t-o-d-o-timeline-item-conversion-information/index-"}},p={},d=[],g={toc:d},l="wrapper";function k(s){let{components:e,...n}=s;return(0,t.kt)(l,(0,a.Z)({},g,n,{components:e,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"configuretasks"},"configureTasks"),(0,t.kt)(i.Z,{dokkaHTML:o,mdxType:"DokkaComponent"}))}k.isMDXComponent=!0}}]);