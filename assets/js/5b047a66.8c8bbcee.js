"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[23678],{930805:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=n(487462),r=(n(667294),n(603905));const l={sidebar_position:2,slug:"/modules"},i="Modules",o={unversionedId:"docs/modules",id:"docs/modules",title:"Modules",description:"api-public",source:"@site/docs/docs/modules.mdx",sourceDirName:"docs",slug:"/modules",permalink:"/gropius-docs/modules",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,slug:"/modules"},sidebar:"docSidebar",previous:{title:"Gropius Backend",permalink:"/gropius-docs/"},next:{title:"GitHub sync",permalink:"/gropius-docs/github-sync"}},u={},s=[{value:"api-public",id:"api-public",level:2},{value:"Configuration",id:"configuration",level:4},{value:"Requirements",id:"requirements",level:4},{value:"Runtime Dependencies",id:"runtime-dependencies",level:4},{value:"Run",id:"run",level:4},{value:"api-internal",id:"api-internal",level:2},{value:"Configuration",id:"configuration-1",level:4},{value:"Requirements",id:"requirements-1",level:4},{value:"Runtime Dependencies",id:"runtime-dependencies-1",level:4},{value:"Run",id:"run-1",level:4},{value:"login-service",id:"login-service",level:2},{value:"Configuration",id:"configuration-2",level:4},{value:"Requirements",id:"requirements-2",level:4},{value:"Runtime Dependencies",id:"runtime-dependencies-2",level:4},{value:"Run",id:"run-2",level:4},{value:"github",id:"github",level:2},{value:"Configuration",id:"configuration-3",level:4},{value:"Requirements",id:"requirements-3",level:4},{value:"Runtime Dependencies",id:"runtime-dependencies-3",level:4},{value:"Run",id:"run-3",level:4},{value:"core",id:"core",level:2},{value:"Configuration",id:"configuration-4",level:4},{value:"Requirements",id:"requirements-4",level:4},{value:"Runtime Dependencies",id:"runtime-dependencies-4",level:4},{value:"api-common",id:"api-common",level:2},{value:"Configuration",id:"configuration-5",level:4},{value:"Requirements",id:"requirements-5",level:4},{value:"Runtime Dependencies",id:"runtime-dependencies-5",level:4},{value:"sync",id:"sync",level:2},{value:"Configuration",id:"configuration-6",level:4},{value:"Requirements",id:"requirements-6",level:4},{value:"Runtime Dependencies",id:"runtime-dependencies-6",level:4}],p={toc:s},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"modules"},"Modules"),(0,r.kt)("h1",{id:"runnable-modules"},"Runnable Modules"),(0,r.kt)("div",{className:"mermaid-c4"},(0,r.kt)("mermaid",{value:'C4Dynamic\n    Boundary(b1, "Public Services") {\n        Boundary(b2, "Public Services") {\n            System(public-api, public-api, "")\n            System(login-service, login-service, "")\n        }\n        Boundary(b3, "Internal Services") {\n            System(internal-api, internal-api, "")\n            System(github, github, "")\n        }\n        Boundary(b4, "Databases") {\n            SystemDb(neo4j, "Neo4j", "")\n            SystemDb(mongodb, "MongoDB", "")\n            SystemDb(postgres, "PostgresQL", "")\n        }\n    }\n    UpdateLayoutConfig($c4ShapeInRow="3", $c4BoundaryInRow="2")\n    Rel(public-api, neo4j, "bolt/TCP")\n    Rel(internal-api, neo4j, "bolt/TCP")\n    Rel(github, login-service, "REST/HTTP")\n    Rel(login-service, internal-api, "GraphQL/HTTP")\n    Rel(github, neo4j, "bolt/TCP")\n    Rel(github, mongodb, "mongodb/TCP")\n    Rel(login-service, postgres, "TCP")'})),(0,r.kt)("h2",{id:"api-public"},"api-public"),(0,r.kt)("p",null,"The main GraphQL API of the backend.\nCan safely be publicly exposed and can be horizontally scaled.\nBy default, users have to be authenticated. A JWT must be obtained via the authentication service (tbd) and then provided with each GraphQL request using the Authorization-Header:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Authorization: Bearer token\n")),(0,r.kt)("p",null,"Authorization can be disabled for debugging purposes by setting ",(0,r.kt)("inlineCode",{parentName:"p"},"gropius.api.debugNoAuthentication=true"),", however, note that mutations still require the token to determine the user (however permissions will not be checked).",(0,r.kt)("br",{parentName:"p"}),"\n","Depends on ",(0,r.kt)("a",{parentName:"p",href:"#api-common"},"api-common")),(0,r.kt)("h4",{id:"configuration"},"Configuration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Spring property"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"gropius.api.public.debugNoAuthentication"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", authorization is disabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"gropius.api.public.jwtSecret"),(0,r.kt)("td",{parentName:"tr",align:null},"- (required)"),(0,r.kt)("td",{parentName:"tr",align:null},"Secret for JWT validation. Caution: value is interpreted as Base64 encoded string!")))),(0,r.kt)("p",null,"Configuration for ",(0,r.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-data/neo4j/docs/current/reference/html/#configure-spring-boot-project"},"Spring Data Neo4j")," is required."),(0,r.kt)("h4",{id:"requirements"},"Requirements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Java >= 17")),(0,r.kt)("h4",{id:"runtime-dependencies"},"Runtime Dependencies"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Neo4j database")),(0,r.kt)("h4",{id:"run"},"Run"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"./gradlew api-public:bootRun\n")),(0,r.kt)("h2",{id:"api-internal"},"api-internal"),(0,r.kt)("p",null,"The internal GraphQL API of the backend.\nMUST NOT be publicly exposed as no authentication or authorization is done.\nCan be horizontally scaled.\nIf the ",(0,r.kt)("inlineCode",{parentName:"p"},"gropius.api.internal.apiToken")," config property is set, users have to be authenticated using the Authorization-Header:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Authorization: Bearer token\n")),(0,r.kt)("p",null,"Depends on ",(0,r.kt)("a",{parentName:"p",href:"#api-common"},"api-common")),(0,r.kt)("h4",{id:"configuration-1"},"Configuration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"gropius.api.internal.apiToken"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"If provided, each GraphQL request must provide the token in the Authorization header")))),(0,r.kt)("p",null,"Configuration for ",(0,r.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-data/neo4j/docs/current/reference/html/#configure-spring-boot-project"},"Spring Data Neo4j")," is required."),(0,r.kt)("h4",{id:"requirements-1"},"Requirements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Java >= 17")),(0,r.kt)("h4",{id:"runtime-dependencies-1"},"Runtime Dependencies"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Neo4j database")),(0,r.kt)("h4",{id:"run-1"},"Run"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"./gradlew api-internal:bootRun\n")),(0,r.kt)("h2",{id:"login-service"},"login-service"),(0,r.kt)("p",null,"Nodejs/Nestjs service that does the user management and authentication for the gropius-backend.\nIt will generate tokens for the user to use to identify against the api."),(0,r.kt)("h4",{id:"configuration-2"},"Configuration"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"General settings"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Environment variable"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_LOGIN_SPECIFIC_JWT_SECRET"),(0,r.kt)("td",{parentName:"tr",align:null},"- (required)"),(0,r.kt)("td",{parentName:"tr",align:null},"JWT secret used to sign tokens that are not access tokens to the backend. It is recommended to choos a different secret from GROPIUS_INTERNAL_BACKEND_JWT_SECRET to avoid token misuse. Make sure this is a LONG and RANDOM value and NOBONDY knows it. Else they can create valid tokens.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_JWT_ISSUER"),(0,r.kt)("td",{parentName:"tr",align:null},"gropius-login"),(0,r.kt)("td",{parentName:"tr",align:null},"The value to put in the issuer field all jwt signed.Can be any value but a unique value is recommended.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_ACCESS_TOKEN_EXPIRATION_TIME_MS"),(0,r.kt)("td",{parentName:"tr",align:null},"600000 (= 10min)"),(0,r.kt)("td",{parentName:"tr",align:null},"The time after which a issued access token for the backend expires and needs to be refreshed.Specify the value in ms.CAUTION: Access tokens can not easily be revoked. Don't make this time too long.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_OAUTH_CODE_EXPIRATION_TIME_MS"),(0,r.kt)("td",{parentName:"tr",align:null},"600000 (= 10min)"),(0,r.kt)("td",{parentName:"tr",align:null},"The time after which an oauth code, issued after finishing the oauth server flow, expires.This is the time a client has between receiving tha callback and fetching the access token.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_REGISTRATION_EXPIRATION_TIME_MS"),(0,r.kt)("td",{parentName:"tr",align:null},"600000 (= 10min)"),(0,r.kt)("td",{parentName:"tr",align:null},"The time after a registration of a new authentication until it expires. This is a time the USER between passing the authentication flow and submitting the registration form in the client.Don't set this too short or users will be frustrated, that they can't complete the registration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_REGULAR_LOGINS_INACTIVE_EXPIRATION_TIME_MS"),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"The time after which a regular login event (non sync login) will expire and refresh tokens become invalid. The actual time after which the user looses access is quantized by the expiration time of the issued access token. If 0, logins won't expire.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_PERFORM_IMS_USER_SEARCH_ON"),(0,r.kt)("td",{parentName:"tr",align:null},"=LOGIN,REG,REG_SYNC"),(0,r.kt)("td",{parentName:"tr",align:null},"The authentication events on which a search for yet unlinked ims users will be done. To link them to the authentication and (if present) the gropius user. Comma separated list.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_CLIENT_SECRET_LENGTH"),(0,r.kt)("td",{parentName:"tr",align:null},"48"),(0,r.kt)("td",{parentName:"tr",align:null},"The length (in bytes) of the generated client secrets for the oauth clients.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_LOGIN_LISTEN_PORT"),(0,r.kt)("td",{parentName:"tr",align:null},"3000"),(0,r.kt)("td",{parentName:"tr",align:null},"The port number on which to listen for API requests"))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Gropius-backend internal API config"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Environment variable"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_INTERNAL_BACKEND_ENDPOINT"),(0,r.kt)("td",{parentName:"tr",align:null},"http://localhost:8081/graphql"),(0,r.kt)("td",{parentName:"tr",align:null},"The full GraphQL-API endpoint URL of the internal backend api (usually ends with /graphql). Remember: If running in docker-compose, you can use the docker service name as hostname.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_INTERNAL_BACKEND_TOKEN"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},'The API secret that the internal backend API expects to allow requests. Will be prefixed with "Bearer ".')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_INTERNAL_BACKEND_JWT_SECRET"),(0,r.kt)("td",{parentName:"tr",align:null},"- (required)"),(0,r.kt)("td",{parentName:"tr",align:null},"Secret to be used to sign the access tokens that can be used with the backend. Must be the same value as configured in the backend so the tokens are accepted. It is recommended to choos a different secret from GROPIUS_LOGIN_SPECIFIC_JWT_SECRET to avoid token misuse. Make sure this is a LONG and RANDOM value and NOBONDY knows it. Else they can create valid tokens. Caution: value is interpreted as Base64 encoded string!"))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Database (postgres) configuration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Environment variable"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_LOGIN_DATABASE_DRIVER"),(0,r.kt)("td",{parentName:"tr",align:null},"postgres"),(0,r.kt)("td",{parentName:"tr",align:null},'The database driver to use. Supported values: "postgres" (reccomended) and ("sqlite"). Note: The application relies on postgres specific types and SQL features in some places. The sqlite functionality is UNTESTED. To run the service without a running database (e.g. for api inspection) it is however useful to be able to switch to "sqlite".')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_LOGIN_DATABASE_HOST"),(0,r.kt)("td",{parentName:"tr",align:null},"localhost"),(0,r.kt)("td",{parentName:"tr",align:null},"The hostname of the postgres databas server (remember: docker service names)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_LOGIN_DATABASE_PORT"),(0,r.kt)("td",{parentName:"tr",align:null},"5432"),(0,r.kt)("td",{parentName:"tr",align:null},"The port on which the postgres database is listening")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_LOGIN_DATABASE_USER"),(0,r.kt)("td",{parentName:"tr",align:null},"postgres"),(0,r.kt)("td",{parentName:"tr",align:null},"The username in the postgres database to use")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_LOGIN_DATABASE_PASSWORD"),(0,r.kt)("td",{parentName:"tr",align:null},"postgres"),(0,r.kt)("td",{parentName:"tr",align:null},"The password for the user specified above")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_LOGIN_DATABASE_DATABASE"),(0,r.kt)("td",{parentName:"tr",align:null},"gropius"),(0,r.kt)("td",{parentName:"tr",align:null},'For postgres: Name of the database to use on the server. For sqlite: appended with ".sqlite" this specifies the Database file path'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Passport strategies options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Environment variable"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_PASSPORT_STATE_JWT_ISSUER"),(0,r.kt)("td",{parentName:"tr",align:null},"gropius-login-state"),(0,r.kt)("td",{parentName:"tr",align:null},"The issuer to use in JWTs used to preserve state while using a oauth authentication provider. Using a different value than with GROPIUS_JWT_ISSUER is recommended to avoid token misuse.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_BCRYPT_HASH_ROUNDS"),(0,r.kt)("td",{parentName:"tr",align:null},"10"),(0,r.kt)("td",{parentName:"tr",align:null},"The number of rounds to pass to bcrypt when in use (e.g. for auth client secrets, passwords, ...). The actual number of rounds will be 2^GROPIUS_BCRYPT_HASH_ROUNDS.Choosing this wisely is importand. Too low makes the hashes unsecure and too high makes hasing take too long."))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Sync-service API settings"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Environment variable"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_LOGIN_SYNC_API_SECRET"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},'The secret that is expected from a sync service client connecting to the sync API prefixed with "Bearer ". Set this to a long and unguessable value to ensure only the sync services can access tha api and request tokens from users.'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Entity management"),(0,r.kt)("p",null,"The following section allows creating default strategy instance and user for initialization.\nIf none of the values are set (i.e. if they're commented out), no entity creation will take place."),(0,r.kt)("p",null,"Parameters for creating a strategy instance.\nType and instance cnfig must be given for creation to happen.\nThe config should follow the same rules as when creating through the API."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Environment variable"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_DEFAULT_STRATEGY_INSTANCE_TYPE"),(0,r.kt)("td",{parentName:"tr",align:null},"userpass"),(0,r.kt)("td",{parentName:"tr",align:null},"Type of the default strategy instance")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_DEFAULT_STRATEGY_INSTANCE_CONFIG"),(0,r.kt)("td",{parentName:"tr",align:null},"{}"),(0,r.kt)("td",{parentName:"tr",align:null},"Config of the default strategy instance")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_DEFAULT_STRATEGY_INSTANCE_NAME"),(0,r.kt)("td",{parentName:"tr",align:null},"userpass-local"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the default strategy instance")))),(0,r.kt)("p",null,"Parameters for creating an admin user.\nUsername, displayName and strategy instance name are required for creation to happen.\nThis can only create users for strategies that accept credentials via POST.\n(i.e. not for oauth, ...). The structure/valiables of the post data must be the same as for the API request.\nIf a user with that username already exists or the credentials aren't unique, the creation will fail."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Environment variable"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_DEFAULT_USER_USERNAME"),(0,r.kt)("td",{parentName:"tr",align:null},"administrator"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the default user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_DEFAULT_USER_DISPLAYNAME"),(0,r.kt)("td",{parentName:"tr",align:null},"System-Admin"),(0,r.kt)("td",{parentName:"tr",align:null},"Display name of the default user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_DEFAULT_USER_POST_DATA"),(0,r.kt)("td",{parentName:"tr",align:null},'{"password": "admin"}'),(0,r.kt)("td",{parentName:"tr",align:null},"Credentials for the default user that would otherwise have been passed via POST")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_DEFAULT_USER_STRATEGY_INSTANCE_NAME"),(0,r.kt)("td",{parentName:"tr",align:null},"userpass-local"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the authentication strategy instance used for credential management")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Environment variable"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GROPIUS_DEFAULT_AUTH_CLIENT_NAME"),(0,r.kt)("td",{parentName:"tr",align:null},"initial-client"),(0,r.kt)("td",{parentName:"tr",align:null},"Parameter for creating an auth client. If this is set, an auth client with that name and with no requirement for secrets will be created. The clientId of the created/found auth client will be printed to the console on startup."))))),(0,r.kt)("h4",{id:"requirements-2"},"Requirements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Node >= 16.17.0")),(0,r.kt)("h4",{id:"runtime-dependencies-2"},"Runtime Dependencies"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Postgres database"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#internal-api"},"internal-api"))),(0,r.kt)("h4",{id:"run-2"},"Run"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# install\n./gradlew login-service:npm_install\n# run\n./gradlew login-service:npm_start\n")),(0,r.kt)("h2",{id:"github"},"github"),(0,r.kt)("p",null,"Github sync that executes exactly one sync cycle.\nMay not be executed more than once at the same time.\nDocumentation about the concept can be found ",(0,r.kt)("a",{parentName:"p",href:"/gropius-docs/github-sync"},"here"),".",(0,r.kt)("br",{parentName:"p"}),"\n","Depends on ",(0,r.kt)("a",{parentName:"p",href:"#sync"},"sync")),(0,r.kt)("h4",{id:"configuration-3"},"Configuration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Spring property"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"gropius.sync.github.maxMutationCount"),(0,r.kt)("td",{parentName:"tr",align:null},"100"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of Mutations per cycle that are allowed for one IMS")))),(0,r.kt)("p",null,"Configuration for ",(0,r.kt)("a",{parentName:"p",href:"#sync"},"sync"),", ",(0,r.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-data/neo4j/docs/current/reference/html/#configure-spring-boot-project"},"Spring Data Neo4j")," and Spring Data MonoDB is required."),(0,r.kt)("h4",{id:"requirements-3"},"Requirements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Java >= 17")),(0,r.kt)("h4",{id:"runtime-dependencies-3"},"Runtime Dependencies"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Neo4j database"),(0,r.kt)("li",{parentName:"ul"},"MongoDB database"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#login-service"},"login-service"))),(0,r.kt)("h4",{id:"run-3"},"Run"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"./gradlew github:bootRun\n")),(0,r.kt)("h1",{id:"abstract-modules"},"Abstract Modules"),(0,r.kt)("h2",{id:"core"},"core"),(0,r.kt)("p",null,"The core part of the Gropius backend, contains the domain model as well as service and repository classes.",(0,r.kt)("br",{parentName:"p"}),"\n","Requires a Neo4j database, for the configuration see ",(0,r.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-data/neo4j/docs/current/reference/html/#configure-spring-boot-project"},"Configure the project"),"."),(0,r.kt)("h4",{id:"configuration-4"},"Configuration"),(0,r.kt)("p",null,"Configuration for ",(0,r.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-data/neo4j/docs/current/reference/html/#configure-spring-boot-project"},"Spring Data Neo4j")," is required."),(0,r.kt)("h4",{id:"requirements-4"},"Requirements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Java >= 17")),(0,r.kt)("h4",{id:"runtime-dependencies-4"},"Runtime Dependencies"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Neo4j database")),(0,r.kt)("h2",{id:"api-common"},"api-common"),(0,r.kt)("p",null,"Contains common functionality for ",(0,r.kt)("a",{parentName:"p",href:"#api-public"},"api-public")," and ",(0,r.kt)("a",{parentName:"p",href:"#api-internal"},"api-internal"),".",(0,r.kt)("br",{parentName:"p"}),"\n","By default, the API is provided on port 8080 at the endpoint ",(0,r.kt)("inlineCode",{parentName:"p"},"/graphql"),", a GraphiQL can be found at ",(0,r.kt)("inlineCode",{parentName:"p"},"/graphiql"),".\nFor the configuration of the GraphQL endpoints, see ",(0,r.kt)("a",{parentName:"p",href:"https://opensource.expediagroup.com/graphql-kotlin/docs/server/spring-server/spring-properties"},"Configuration Properties"),".",(0,r.kt)("br",{parentName:"p"}),"\n","Depends on ",(0,r.kt)("a",{parentName:"p",href:"#core"},"core")),(0,r.kt)("h4",{id:"configuration-5"},"Configuration"),(0,r.kt)("p",null,"Configuration for ",(0,r.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-data/neo4j/docs/current/reference/html/#configure-spring-boot-project"},"Spring Data Neo4j")," is required."),(0,r.kt)("h4",{id:"requirements-5"},"Requirements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Java >= 17")),(0,r.kt)("h4",{id:"runtime-dependencies-5"},"Runtime Dependencies"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Neo4j database")),(0,r.kt)("h2",{id:"sync"},"sync"),(0,r.kt)("p",null,"Contains abstract helpers for general sync development.",(0,r.kt)("br",{parentName:"p"}),"\n","Depends on ",(0,r.kt)("a",{parentName:"p",href:"#core"},"core")),(0,r.kt)("h4",{id:"configuration-6"},"Configuration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Spring property"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"gropius.sync.loginServiceBase"),(0,r.kt)("td",{parentName:"tr",align:null},"- (required)"),(0,r.kt)("td",{parentName:"tr",align:null},"Base url of the login service")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"gropius.sync.apiSecret"),(0,r.kt)("td",{parentName:"tr",align:null},"- (required)"),(0,r.kt)("td",{parentName:"tr",align:null},"Secret for login service")))),(0,r.kt)("p",null,"Configuration for ",(0,r.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-data/neo4j/docs/current/reference/html/#configure-spring-boot-project"},"Spring Data Neo4j")," is required."),(0,r.kt)("h4",{id:"requirements-6"},"Requirements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Java >= 17")),(0,r.kt)("h4",{id:"runtime-dependencies-6"},"Runtime Dependencies"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Neo4j database"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#login-service"},"login-service"))))}m.isMDXComponent=!0}}]);