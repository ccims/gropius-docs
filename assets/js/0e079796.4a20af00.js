"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9990],{431001:(a,t,e)=>{e.r(t),e.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var s=e(487462),n=(e(667294),e(603905)),i=e(689417);const p='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":core:dokkaHtmlPartial/main"><div class="symbol monospace"><span class="token keyword">fun </span><a href="template-field-specifications-"><span class="token function">templateFieldSpecifications</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">name<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">, </span></span><span class="parameter "><span><span class="token annotation builtin">@</span><span data-unresolved-link="org.springframework.beans.factory.annotation/Autowired///PointingToDeclaration/"><span class="token annotation builtin">Autowired</span></span>&nbsp;</span>objectMapper<span class="token operator">: </span><span data-unresolved-link="com.fasterxml.jackson.databind/ObjectMapper///PointingToDeclaration/">ObjectMapper</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><span data-unresolved-link="com.fasterxml.jackson.databind/JsonNode///PointingToDeclaration/">JsonNode</span></div><p class="paragraph">Schema of a template field by name of the template field. Error if the field does not exist.</p><hr><div class="symbol monospace"><span class="token keyword">fun </span><a href="template-field-specifications-"><span class="token function">templateFieldSpecifications</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">namePrefix<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token operator">?</span><span class="token operator"> = </span>null<span class="token punctuation">, </span></span><span class="parameter "><span><span class="token annotation builtin">@</span><span data-unresolved-link="org.springframework.beans.factory.annotation/Autowired///PointingToDeclaration/"><span class="token annotation builtin">Autowired</span></span>&nbsp;</span>objectMapper<span class="token operator">: </span><span data-unresolved-link="com.fasterxml.jackson.databind/ObjectMapper///PointingToDeclaration/">ObjectMapper</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin-stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><a href="../-j-s-o-n-field/index-">JSONField</a><span class="token operator">&gt;</span></div><p class="paragraph">All template field specifications, if a `namePrefix` is provided, only those matching it</p><hr><div class="symbol monospace"><span class="token keyword">val </span><a href="template-field-specifications-">templateFieldSpecifications</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin-stdlib/kotlin.collections/-mutable-map/index.html">MutableMap</a><span class="token operator">&lt;</span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">, </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin-stdlib/kotlin/-string/index.html">String</a><span class="token operator">&gt;</span></div><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":core:dokkaHtmlPartial/main" data-filterable-set=":core:dokkaHtmlPartial/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span>template</span><wbr><span>Field</span><wbr><span><span>Specifications</span></span></u></div></span></div><div><div class="title"><p class="paragraph">the schema for all templated fields defined by this template</p></div></div></div></div></div></div></div>\n',o={},l="templateFieldSpecifications",r={unversionedId:"api/core/gropius.model.template/-base-template/template-field-specifications-",id:"api/core/gropius.model.template/-base-template/template-field-specifications-",title:"templateFieldSpecifications",description:"",source:"@site/docs/api/core/gropius.model.template/-base-template/template-field-specifications-.mdx",sourceDirName:"api/core/gropius.model.template/-base-template",slug:"/api/core/gropius.model.template/-base-template/template-field-specifications-",permalink:"/gropius-docs/api/core/gropius.model.template/-base-template/template-field-specifications-",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"BaseTemplate",permalink:"/gropius-docs/api/core/gropius.model.template/-base-template/-base-template-"},next:{title:"usedIn",permalink:"/gropius-docs/api/core/gropius.model.template/-base-template/used-in-"}},c={},d=[],m={toc:d},k="wrapper";function f(a){let{components:t,...e}=a;return(0,n.kt)(k,(0,s.Z)({},m,e,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"templatefieldspecifications"},"templateFieldSpecifications"),(0,n.kt)(i.Z,{dokkaHTML:p,mdxType:"DokkaComponent"}))}f.isMDXComponent=!0}}]);