"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[35697],{395830:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>k,contentTitle:()=>y,default:()=>I,frontMatter:()=>m,metadata:()=>f,toc:()=>b});var i=s(487462),n=(s(667294),s(603905)),r=s(258219),a=(s(162316),s(580667)),o=s.n(a),l=s(524228),u=s.n(l),d=s(909487),p=(s(241429),s(905397)),c=s(504667),h=s(809472),g=s(685162);const m={id:"users-controller-get-own-user-4",title:"Get logged in user details",description:"Gets the user object of the logged in user that is sending the request.",sidebar_label:"Get logged in user details",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"UsersController_getOwnUser_4",description:"Gets the user object of the logged in user that is sending the request.",parameters:[],responses:{200:{description:"The user details of the logged in user",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",description:"The unique ID of this login user",example:"12345678-90ab-cdef-fedc-ab0987654321"},neo4jId:{type:"string",nullable:!0,description:"The id of this user in the neo4j database.\n\nIf null after initialization, there was an error.\nMust be unique as relation to GropiusUser is 1:1."},username:{type:"string",description:"The plain text username of the user.\nMust be kept in sync with username in backend.\n\nCurrently has no use outside the userpass strategy"},revokeTokensBefore:{format:"date-time",type:"string",description:"All tokens (INCLUDING access tokens) issued to this user **before** this date are no longer valid.\n\nUsed to 'emergency'-Revoke tokens"}},required:["id","neo4jId","username","revokeTokensBefore"],title:"LoginUser"}}}}},tags:["login-api"],security:[{bearer:[]}],method:"get",path:"/auth/api/login/user/self",servers:[],securitySchemes:{oauth2:{type:"oauth2",flows:{},description:"Access token provided by running the oauth flow (and if needed) registering/linking",bearerFormat:"JWT"},bearer:{scheme:"bearer",bearerFormat:"JWT",type:"apiKey",description:"Access token provided after running the oauth flow (and if needed registering/linking)"},api_key:{type:"apiKey",in:"header",name:"sync-api",description:"Secret Text shared between sync services and login service"}},info:{title:"Gropius Login Service",description:"API for login, registration and linking Gropius accounts to accounts on IMSs",version:"1.0.0",contact:{}},postman:{name:"Get logged in user details",description:{content:"Gets the user object of the logged in user that is sending the request.",type:"text/plain"},url:{path:["auth","api","login","user","self"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Accept",value:"application/json"}],method:"GET",auth:{type:"apikey",apikey:[{type:"any",value:"<API Key Name>",key:"key"},{type:"any",value:"<API Key>",key:"value"},{type:"any",value:"header",key:"in"}]}}},sidebar_class_name:"get api-method",info_path:"login-service/gropius-login-service",custom_edit_url:null},y=void 0,f={unversionedId:"login-service/users-controller-get-own-user-4",id:"login-service/users-controller-get-own-user-4",title:"Get logged in user details",description:"Gets the user object of the logged in user that is sending the request.",source:"@site/rest-docs/login-service/users-controller-get-own-user-4.api.mdx",sourceDirName:"login-service",slug:"/login-service/users-controller-get-own-user-4",permalink:"/gropius-docs/rest/login-service/users-controller-get-own-user-4",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"users-controller-get-own-user-4",title:"Get logged in user details",description:"Gets the user object of the logged in user that is sending the request.",sidebar_label:"Get logged in user details",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"UsersController_getOwnUser_4",description:"Gets the user object of the logged in user that is sending the request.",parameters:[],responses:{200:{description:"The user details of the logged in user",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",description:"The unique ID of this login user",example:"12345678-90ab-cdef-fedc-ab0987654321"},neo4jId:{type:"string",nullable:!0,description:"The id of this user in the neo4j database.\n\nIf null after initialization, there was an error.\nMust be unique as relation to GropiusUser is 1:1."},username:{type:"string",description:"The plain text username of the user.\nMust be kept in sync with username in backend.\n\nCurrently has no use outside the userpass strategy"},revokeTokensBefore:{format:"date-time",type:"string",description:"All tokens (INCLUDING access tokens) issued to this user **before** this date are no longer valid.\n\nUsed to 'emergency'-Revoke tokens"}},required:["id","neo4jId","username","revokeTokensBefore"],title:"LoginUser"}}}}},tags:["login-api"],security:[{bearer:[]}],method:"get",path:"/auth/api/login/user/self",servers:[],securitySchemes:{oauth2:{type:"oauth2",flows:{},description:"Access token provided by running the oauth flow (and if needed) registering/linking",bearerFormat:"JWT"},bearer:{scheme:"bearer",bearerFormat:"JWT",type:"apiKey",description:"Access token provided after running the oauth flow (and if needed registering/linking)"},api_key:{type:"apiKey",in:"header",name:"sync-api",description:"Secret Text shared between sync services and login service"}},info:{title:"Gropius Login Service",description:"API for login, registration and linking Gropius accounts to accounts on IMSs",version:"1.0.0",contact:{}},postman:{name:"Get logged in user details",description:{content:"Gets the user object of the logged in user that is sending the request.",type:"text/plain"},url:{path:["auth","api","login","user","self"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Accept",value:"application/json"}],method:"GET",auth:{type:"apikey",apikey:[{type:"any",value:"<API Key Name>",key:"key"},{type:"any",value:"<API Key>",key:"value"},{type:"any",value:"header",key:"in"}]}}},sidebar_class_name:"get api-method",info_path:"login-service/gropius-login-service",custom_edit_url:null},sidebar:"restSidebar",previous:{title:"Create a new user without authentication",permalink:"/gropius-docs/rest/login-service/users-controller-create-new-user-6"},next:{title:"Get any user object by id",permalink:"/gropius-docs/rest/login-service/users-controller-get-one-user-5"}},k={},b=[{value:"Request",id:"request",level:2}],v={toc:b},T="wrapper";function I(e){let{components:t,...s}=e;return(0,n.kt)(T,(0,i.Z)({},v,s,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{className:"openapi__heading"},"Get logged in user details"),(0,n.kt)(o(),{method:"get",path:"/auth/api/login/user/self",mdxType:"MethodEndpoint"}),(0,n.kt)(u(),{infoPath:"login-service/gropius-login-service",mdxType:"SecuritySchemes"}),(0,n.kt)("p",null,"Gets the user object of the logged in user that is sending the request."),(0,n.kt)("h2",{id:"request"},"Request"),(0,n.kt)("div",null,(0,n.kt)("div",null,(0,n.kt)(r.Z,{mdxType:"ApiTabs"},(0,n.kt)(g.default,{label:"200",value:"200",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"The user details of the logged in user")),(0,n.kt)("div",null,(0,n.kt)(d.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,n.kt)(g.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,n.kt)(h.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,n.kt)(g.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,n.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,n.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,n.kt)("strong",null,"Schema")),(0,n.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,n.kt)("ul",{style:{marginLeft:"1rem"}},(0,n.kt)(c.Z,{collapsible:!1,name:"id",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The unique ID of this login user",example:"12345678-90ab-cdef-fedc-ab0987654321"},mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"neo4jId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",nullable:!0,description:"The id of this user in the neo4j database.\n\nIf null after initialization, there was an error.\nMust be unique as relation to GropiusUser is 1:1."},mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"username",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The plain text username of the user.\nMust be kept in sync with username in backend.\n\nCurrently has no use outside the userpass strategy"},mdxType:"SchemaItem"}),(0,n.kt)(c.Z,{collapsible:!1,name:"revokeTokensBefore",required:!0,schemaName:"date-time",qualifierMessage:void 0,schema:{format:"date-time",type:"string",description:"All tokens (INCLUDING access tokens) issued to this user **before** this date are no longer valid.\n\nUsed to 'emergency'-Revoke tokens"},mdxType:"SchemaItem"})))),(0,n.kt)(g.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,n.kt)(p.Z,{responseExample:'{\n  "id": "12345678-90ab-cdef-fedc-ab0987654321",\n  "neo4jId": "string",\n  "username": "string",\n  "revokeTokensBefore": "2025-08-28T16:01:27.621Z"\n}',language:"json",mdxType:"ResponseSamples"})))))))))))}I.isMDXComponent=!0}}]);