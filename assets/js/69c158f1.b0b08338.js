"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[64235],{856889:(a,n,i)=>{i.r(n),i.d(n,{assets:()=>p,contentTitle:()=>r,default:()=>f,frontMatter:()=>c,metadata:()=>d,toc:()=>l});var s=i(487462),t=(i(667294),i(603905)),o=i(689417);const e='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":sync:dokkaHtmlPartial/main"><div class="symbol monospace"><span class="token keyword">suspend </span><span class="token keyword">fun </span><a href="send-notification-"><span class="token function">sendNotification</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">node<span class="token operator">: </span><a href="../../../core/gropius.model.common/-base-node/index-">BaseNode</a><span class="token punctuation">, </span></span><span class="parameter ">dummy<span class="token operator">: </span><a href="-notification-dummy/index-">SyncNotificator.NotificationDummy</a></span></span><span class="token punctuation">)</span></div><p class="paragraph">Send notification</p><h4 class="">Parameters</h4><div class="table"><div class="table-row" data-filterable-current=":sync:dokkaHtmlPartial/main" data-filterable-set=":sync:dokkaHtmlPartial/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>node</span></span></u></div></span></div><div><div class="title"><p class="paragraph">Node of which the users should receive the notification from</p></div></div></div></div><div class="table-row" data-filterable-current=":sync:dokkaHtmlPartial/main" data-filterable-set=":sync:dokkaHtmlPartial/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><u><span><span>dummy</span></span></u></div></span></div><div><div class="title"><p class="paragraph">MotificationDummy containing the content</p></div></div></div></div></div></div></div>\n',c={},r="sendNotification",d={unversionedId:"api/sync/gropius.sync/-sync-notificator/send-notification-",id:"api/sync/gropius.sync/-sync-notificator/send-notification-",title:"sendNotification",description:"",source:"@site/docs/api/sync/gropius.sync/-sync-notificator/send-notification-.mdx",sourceDirName:"api/sync/gropius.sync/-sync-notificator",slug:"/api/sync/gropius.sync/-sync-notificator/send-notification-",permalink:"/gropius-docs/api/sync/gropius.sync/-sync-notificator/send-notification-",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"SyncNotificator",permalink:"/gropius-docs/api/sync/gropius.sync/-sync-notificator/-sync-notificator-"},next:{title:"TimelineItemConversionInformation",permalink:"/gropius-docs/api/sync/gropius.sync/-timeline-item-conversion-information/index-"}},p={},l=[],m={toc:l},u="wrapper";function f(a){let{components:n,...i}=a;return(0,t.kt)(u,(0,s.Z)({},m,i,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"sendnotification"},"sendNotification"),(0,t.kt)(o.Z,{dokkaHTML:e,mdxType:"DokkaComponent"}))}f.isMDXComponent=!0}}]);