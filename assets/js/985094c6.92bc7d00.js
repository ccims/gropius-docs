"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[72228],{229816:(e,a,t)=>{t.r(a),t.d(a,{Badge:()=>p,Bullet:()=>c,Details:()=>k,SpecifiedBy:()=>b,assets:()=>i,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>g});var l=t(487462),n=t(667294),d=t(603905);const o={id:"label",title:"Label",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},s=void 0,r={unversionedId:"graphql/api-public/objects/label",id:"graphql/api-public/objects/label",title:"Label",description:"Label used to mark Issues with.",source:"@site/docs/graphql/api-public/objects/label.mdx",sourceDirName:"graphql/api-public/objects",slug:"/graphql/api-public/objects/label",permalink:"/gropius-docs/graphql/api-public/objects/label",draft:!1,tags:[],version:"current",frontMatter:{id:"label",title:"Label",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},sidebar:"graphqlSidebar"},i={},c=()=>(0,d.kt)(n.Fragment,null,(0,d.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),b=e=>(0,d.kt)(n.Fragment,null,"Specification",(0,d.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),p=e=>(0,d.kt)(n.Fragment,null,(0,d.kt)("span",{className:e.class},e.text)),g=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>Label.<b>color</b></code><Bullet /><code>String!</code> <Badge class="badge badge--secondary" text="non-null"/> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-labelbcolorbcodestring--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>Label.<b>createdAt</b></code><Bullet /><code>DateTime!</code> <Badge class="badge badge--secondary" text="non-null"/> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-labelbcreatedatbcodedatetime--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>Label.<b>createdBy</b></code><Bullet /><code>User!</code> <Badge class="badge badge--secondary" text="non-null"/> <Badge class="badge badge--secondary" text="interface"/>',id:"code-style-fontweight-normal-labelbcreatedbybcodeuser--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>Label.<b>description</b></code><Bullet /><code>String!</code> <Badge class="badge badge--secondary" text="non-null"/> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-labelbdescriptionbcodestring--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>Label.<b>hasPermission</b></code><Bullet /><code>Boolean!</code> <Badge class="badge badge--secondary" text="non-null"/> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-labelbhaspermissionbcodeboolean--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>Label.<b>id</b></code><Bullet /><code>ID!</code> <Badge class="badge badge--secondary" text="non-null"/> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-labelbidbcodeid--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>Label.<b>issues</b></code><Bullet /><code>IssueConnection!</code> <Badge class="badge badge--secondary" text="non-null"/> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-labelbissuesbcodeissueconnection--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>Label.issues.<b>before</b></code><Bullet /><code>String</code> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-labelissuesbbeforebcodestring-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>Label.issues.<b>filter</b></code><Bullet /><code>IssueFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-labelissuesbfilterbcodeissuefilterinput-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>Label.issues.<b>first</b></code><Bullet /><code>Int</code> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-labelissuesbfirstbcodeint-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>Label.issues.<b>last</b></code><Bullet /><code>Int</code> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-labelissuesblastbcodeint-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>Label.issues.<b>orderBy</b></code><Bullet /><code>[IssueOrder!]</code> <Badge class="badge badge--secondary" text="list"/> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-labelissuesborderbybcodeissueorder--",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>Label.issues.<b>skip</b></code><Bullet /><code>Int</code> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-labelissuesbskipbcodeint-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>Label.<b>lastModifiedAt</b></code><Bullet /><code>DateTime!</code> <Badge class="badge badge--secondary" text="non-null"/> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-labelblastmodifiedatbcodedatetime--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>Label.<b>lastModifiedBy</b></code><Bullet /><code>User!</code> <Badge class="badge badge--secondary" text="non-null"/> <Badge class="badge badge--secondary" text="interface"/>',id:"code-style-fontweight-normal-labelblastmodifiedbybcodeuser--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>Label.<b>name</b></code><Bullet /><code>String!</code> <Badge class="badge badge--secondary" text="non-null"/> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-labelbnamebcodestring--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>Label.<b>trackables</b></code><Bullet /><code>TrackableConnection!</code> <Badge class="badge badge--secondary" text="non-null"/> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-labelbtrackablesbcodetrackableconnection--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>Label.trackables.<b>before</b></code><Bullet /><code>String</code> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-labeltrackablesbbeforebcodestring-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>Label.trackables.<b>filter</b></code><Bullet /><code>TrackableFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-labeltrackablesbfilterbcodetrackablefilterinput-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>Label.trackables.<b>first</b></code><Bullet /><code>Int</code> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-labeltrackablesbfirstbcodeint-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>Label.trackables.<b>last</b></code><Bullet /><code>Int</code> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-labeltrackablesblastbcodeint-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>Label.trackables.<b>orderBy</b></code><Bullet /><code>[TrackableOrder!]</code> <Badge class="badge badge--secondary" text="list"/> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-labeltrackablesborderbybcodetrackableorder--",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>Label.trackables.<b>skip</b></code><Bullet /><code>Int</code> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-labeltrackablesbskipbcodeint-",level:5},{value:"Interfaces",id:"interfaces",level:3},{value:'<code>AuditedNode</code> <Badge class="badge badge--secondary" text="interface"/>',id:"auditednode-",level:4},{value:'<code>BaseNode</code> <Badge class="badge badge--secondary" text="interface"/>',id:"basenode-",level:4},{value:'<code>Named</code> <Badge class="badge badge--secondary" text="interface"/>',id:"named-",level:4},{value:'<code>NamedAuditedNode</code> <Badge class="badge badge--secondary" text="interface"/>',id:"namedauditednode-",level:4},{value:'<code>Node</code> <Badge class="badge badge--secondary" text="interface"/>',id:"node-",level:4},{value:"Returned by",id:"returned-by",level:3},{value:"Member of",id:"member-of",level:3}],k=e=>{let{dataOpen:a,dataClose:t,children:o,startOpen:s=!1}=e;const[r,i]=(0,n.useState)(s);return(0,d.kt)("details",(0,l.Z)({},r?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,d.kt)("summary",{onClick:e=>{e.preventDefault(),i((e=>!e))},style:{listStyle:"none"}},r?a:t),r&&o)},m={Bullet:c,SpecifiedBy:b,Badge:p,toc:g,Details:k},u="wrapper";function h(e){let{components:a,...t}=e;return(0,d.kt)(u,(0,l.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,d.kt)("p",null,"Label used to mark Issues with.\nA Label consists of a name, a description and a color.\nIssues may be synced to all IMSProjects of Trackables they are part of.\nREAD is granted if READ is granted on any Trackable in ",(0,d.kt)("inlineCode",{parentName:"p"},"trackables"),"."),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-graphql"},"type Label implements AuditedNode, BaseNode, Named, NamedAuditedNode, Node {\n  color: String!\n  createdAt: DateTime!\n  createdBy: User!\n  description: String!\n  hasPermission(\n    permission: AllPermissionEntry\n  ): Boolean!\n  id: ID!\n  issues(\n    after: String\n    before: String\n    filter: IssueFilterInput\n    first: Int\n    last: Int\n    orderBy: [IssueOrder!]\n    skip: Int\n  ): IssueConnection!\n  lastModifiedAt: DateTime!\n  lastModifiedBy: User!\n  name: String!\n  trackables(\n    after: String\n    before: String\n    filter: TrackableFilterInput\n    first: Int\n    last: Int\n    orderBy: [TrackableOrder!]\n    skip: Int\n  ): TrackableConnection!\n}\n")),(0,d.kt)("h3",{id:"fields"},"Fields"),(0,d.kt)("h4",{id:"code-style-fontweight-normal-labelbcolorbcodestring--"},(0,d.kt)("a",{parentName:"h4",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.",(0,d.kt)("b",null,"color"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h4",href:"/graphql/api-public/scalars/string"},(0,d.kt)("inlineCode",{parentName:"a"},"String!"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"The color of the Label, used to display the Label.")),(0,d.kt)("h4",{id:"code-style-fontweight-normal-labelbcreatedatbcodedatetime--"},(0,d.kt)("a",{parentName:"h4",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.",(0,d.kt)("b",null,"createdAt"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h4",href:"/graphql/api-public/scalars/date-time"},(0,d.kt)("inlineCode",{parentName:"a"},"DateTime!"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"The DateTime this entity was created at.")),(0,d.kt)("h4",{id:"code-style-fontweight-normal-labelbcreatedbybcodeuser--"},(0,d.kt)("a",{parentName:"h4",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.",(0,d.kt)("b",null,"createdBy"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h4",href:"/graphql/api-public/interfaces/user"},(0,d.kt)("inlineCode",{parentName:"a"},"User!"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"interface",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"The User who created this entity.")),(0,d.kt)("h4",{id:"code-style-fontweight-normal-labelbdescriptionbcodestring--"},(0,d.kt)("a",{parentName:"h4",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.",(0,d.kt)("b",null,"description"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h4",href:"/graphql/api-public/scalars/string"},(0,d.kt)("inlineCode",{parentName:"a"},"String!"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"The description of this entity.")),(0,d.kt)("h4",{id:"code-style-fontweight-normal-labelbhaspermissionbcodeboolean--"},(0,d.kt)("a",{parentName:"h4",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.",(0,d.kt)("b",null,"hasPermission"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h4",href:"/graphql/api-public/scalars/boolean"},(0,d.kt)("inlineCode",{parentName:"a"},"Boolean!"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Checks if the current user has a specific permission on this Node"),(0,d.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-labelhaspermissionbpermissionbcodeallpermissionentry-"},(0,d.kt)("a",{parentName:"h5",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.hasPermission.",(0,d.kt)("b",null,"permission"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h5",href:"/graphql/api-public/enums/all-permission-entry"},(0,d.kt)("inlineCode",{parentName:"a"},"AllPermissionEntry"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"enum",mdxType:"Badge"})),(0,d.kt)("p",{parentName:"blockquote"},"The permission to check for")),(0,d.kt)("h4",{id:"code-style-fontweight-normal-labelbidbcodeid--"},(0,d.kt)("a",{parentName:"h4",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.",(0,d.kt)("b",null,"id"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h4",href:"/graphql/api-public/scalars/id"},(0,d.kt)("inlineCode",{parentName:"a"},"ID!"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"The unique id of this node")),(0,d.kt)("h4",{id:"code-style-fontweight-normal-labelbissuesbcodeissueconnection--"},(0,d.kt)("a",{parentName:"h4",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.",(0,d.kt)("b",null,"issues"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h4",href:"/graphql/api-public/objects/issue-connection"},(0,d.kt)("inlineCode",{parentName:"a"},"IssueConnection!"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Issues which currently have this Label."),(0,d.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-labelissuesbafterbcodestring-"},(0,d.kt)("a",{parentName:"h5",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.issues.",(0,d.kt)("b",null,"after"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h5",href:"/graphql/api-public/scalars/string"},(0,d.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,d.kt)("p",{parentName:"blockquote"},"Get only items after the cursor")),(0,d.kt)("h5",{id:"code-style-fontweight-normal-labelissuesbbeforebcodestring-"},(0,d.kt)("a",{parentName:"h5",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.issues.",(0,d.kt)("b",null,"before"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h5",href:"/graphql/api-public/scalars/string"},(0,d.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Get only items before the cursor")),(0,d.kt)("h5",{id:"code-style-fontweight-normal-labelissuesbfilterbcodeissuefilterinput-"},(0,d.kt)("a",{parentName:"h5",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.issues.",(0,d.kt)("b",null,"filter"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h5",href:"/graphql/api-public/inputs/issue-filter-input"},(0,d.kt)("inlineCode",{parentName:"a"},"IssueFilterInput"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Filter for specific items in the connection")),(0,d.kt)("h5",{id:"code-style-fontweight-normal-labelissuesbfirstbcodeint-"},(0,d.kt)("a",{parentName:"h5",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.issues.",(0,d.kt)("b",null,"first"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h5",href:"/graphql/api-public/scalars/int"},(0,d.kt)("inlineCode",{parentName:"a"},"Int"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Get the first n items. Must not be used if before is specified")),(0,d.kt)("h5",{id:"code-style-fontweight-normal-labelissuesblastbcodeint-"},(0,d.kt)("a",{parentName:"h5",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.issues.",(0,d.kt)("b",null,"last"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h5",href:"/graphql/api-public/scalars/int"},(0,d.kt)("inlineCode",{parentName:"a"},"Int"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Get the last n items. Must not be used if after is specified")),(0,d.kt)("h5",{id:"code-style-fontweight-normal-labelissuesborderbybcodeissueorder--"},(0,d.kt)("a",{parentName:"h5",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.issues.",(0,d.kt)("b",null,"orderBy"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h5",href:"/graphql/api-public/inputs/issue-order"},(0,d.kt)("inlineCode",{parentName:"a"},"[IssueOrder!]"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"list",mdxType:"Badge"})," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Order in which the items are sorted")),(0,d.kt)("h5",{id:"code-style-fontweight-normal-labelissuesbskipbcodeint-"},(0,d.kt)("a",{parentName:"h5",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.issues.",(0,d.kt)("b",null,"skip"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h5",href:"/graphql/api-public/scalars/int"},(0,d.kt)("inlineCode",{parentName:"a"},"Int"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Skips n items. First or last MUST be specified, is otherwise ignored")),(0,d.kt)("h4",{id:"code-style-fontweight-normal-labelblastmodifiedatbcodedatetime--"},(0,d.kt)("a",{parentName:"h4",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.",(0,d.kt)("b",null,"lastModifiedAt"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h4",href:"/graphql/api-public/scalars/date-time"},(0,d.kt)("inlineCode",{parentName:"a"},"DateTime!"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"The DateTime this entity was last modified at.")),(0,d.kt)("h4",{id:"code-style-fontweight-normal-labelblastmodifiedbybcodeuser--"},(0,d.kt)("a",{parentName:"h4",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.",(0,d.kt)("b",null,"lastModifiedBy"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h4",href:"/graphql/api-public/interfaces/user"},(0,d.kt)("inlineCode",{parentName:"a"},"User!"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"interface",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"The User who last modified this entity.")),(0,d.kt)("h4",{id:"code-style-fontweight-normal-labelbnamebcodestring--"},(0,d.kt)("a",{parentName:"h4",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.",(0,d.kt)("b",null,"name"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h4",href:"/graphql/api-public/scalars/string"},(0,d.kt)("inlineCode",{parentName:"a"},"String!"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"The name of this entity.")),(0,d.kt)("h4",{id:"code-style-fontweight-normal-labelbtrackablesbcodetrackableconnection--"},(0,d.kt)("a",{parentName:"h4",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.",(0,d.kt)("b",null,"trackables"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h4",href:"/graphql/api-public/objects/trackable-connection"},(0,d.kt)("inlineCode",{parentName:"a"},"TrackableConnection!"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Trackables this Label is part of."),(0,d.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-labeltrackablesbafterbcodestring-"},(0,d.kt)("a",{parentName:"h5",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.trackables.",(0,d.kt)("b",null,"after"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h5",href:"/graphql/api-public/scalars/string"},(0,d.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,d.kt)("p",{parentName:"blockquote"},"Get only items after the cursor")),(0,d.kt)("h5",{id:"code-style-fontweight-normal-labeltrackablesbbeforebcodestring-"},(0,d.kt)("a",{parentName:"h5",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.trackables.",(0,d.kt)("b",null,"before"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h5",href:"/graphql/api-public/scalars/string"},(0,d.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Get only items before the cursor")),(0,d.kt)("h5",{id:"code-style-fontweight-normal-labeltrackablesbfilterbcodetrackablefilterinput-"},(0,d.kt)("a",{parentName:"h5",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.trackables.",(0,d.kt)("b",null,"filter"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h5",href:"/graphql/api-public/inputs/trackable-filter-input"},(0,d.kt)("inlineCode",{parentName:"a"},"TrackableFilterInput"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Filter for specific items in the connection")),(0,d.kt)("h5",{id:"code-style-fontweight-normal-labeltrackablesbfirstbcodeint-"},(0,d.kt)("a",{parentName:"h5",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.trackables.",(0,d.kt)("b",null,"first"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h5",href:"/graphql/api-public/scalars/int"},(0,d.kt)("inlineCode",{parentName:"a"},"Int"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Get the first n items. Must not be used if before is specified")),(0,d.kt)("h5",{id:"code-style-fontweight-normal-labeltrackablesblastbcodeint-"},(0,d.kt)("a",{parentName:"h5",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.trackables.",(0,d.kt)("b",null,"last"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h5",href:"/graphql/api-public/scalars/int"},(0,d.kt)("inlineCode",{parentName:"a"},"Int"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Get the last n items. Must not be used if after is specified")),(0,d.kt)("h5",{id:"code-style-fontweight-normal-labeltrackablesborderbybcodetrackableorder--"},(0,d.kt)("a",{parentName:"h5",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.trackables.",(0,d.kt)("b",null,"orderBy"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h5",href:"/graphql/api-public/inputs/trackable-order"},(0,d.kt)("inlineCode",{parentName:"a"},"[TrackableOrder!]"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"list",mdxType:"Badge"})," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Order in which the items are sorted")),(0,d.kt)("h5",{id:"code-style-fontweight-normal-labeltrackablesbskipbcodeint-"},(0,d.kt)("a",{parentName:"h5",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"Label.trackables.",(0,d.kt)("b",null,"skip"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h5",href:"/graphql/api-public/scalars/int"},(0,d.kt)("inlineCode",{parentName:"a"},"Int"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Skips n items. First or last MUST be specified, is otherwise ignored")),(0,d.kt)("h3",{id:"interfaces"},"Interfaces"),(0,d.kt)("h4",{id:"auditednode-"},(0,d.kt)("a",{parentName:"h4",href:"/graphql/api-public/interfaces/audited-node"},(0,d.kt)("inlineCode",{parentName:"a"},"AuditedNode"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"interface",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Node which provides auditing information, which can e.g. be used for the sync.\nWhen it was created and last modified, if the it is already deleted, and by who it was created and last modified.\nA modification is any change of a field on the node itself and a change of a relation (add or removed).\nA change on a related related node is not a modification.")),(0,d.kt)("h4",{id:"basenode-"},(0,d.kt)("a",{parentName:"h4",href:"/graphql/api-public/interfaces/base-node"},(0,d.kt)("inlineCode",{parentName:"a"},"BaseNode"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"interface",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Shared extensions to the node type.")),(0,d.kt)("h4",{id:"named-"},(0,d.kt)("a",{parentName:"h4",href:"/graphql/api-public/interfaces/named"},(0,d.kt)("inlineCode",{parentName:"a"},"Named"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"interface",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Entity with a name and a description.")),(0,d.kt)("h4",{id:"namedauditednode-"},(0,d.kt)("a",{parentName:"h4",href:"/graphql/api-public/interfaces/named-audited-node"},(0,d.kt)("inlineCode",{parentName:"a"},"NamedAuditedNode"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"interface",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"AuditedNode with a name and description")),(0,d.kt)("h4",{id:"node-"},(0,d.kt)("a",{parentName:"h4",href:"/graphql/api-public/interfaces/node"},(0,d.kt)("inlineCode",{parentName:"a"},"Node"))," ",(0,d.kt)(p,{class:"badge badge--secondary",text:"interface",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Base class of all nodes")),(0,d.kt)("h3",{id:"returned-by"},"Returned by"),(0,d.kt)("p",null,(0,d.kt)("a",{parentName:"p",href:"/graphql/api-public/queries/search-labels"},(0,d.kt)("inlineCode",{parentName:"a"},"searchLabels")),"  ",(0,d.kt)(p,{class:"badge badge--secondary",text:"query",mdxType:"Badge"})),(0,d.kt)("h3",{id:"member-of"},"Member of"),(0,d.kt)("p",null,(0,d.kt)("a",{parentName:"p",href:"/graphql/api-public/objects/added-label-event"},(0,d.kt)("inlineCode",{parentName:"a"},"AddedLabelEvent")),"  ",(0,d.kt)(p,{class:"badge badge--secondary",text:"object",mdxType:"Badge"}),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"p",href:"/graphql/api-public/objects/create-label-payload"},(0,d.kt)("inlineCode",{parentName:"a"},"CreateLabelPayload")),"  ",(0,d.kt)(p,{class:"badge badge--secondary",text:"object",mdxType:"Badge"}),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"p",href:"/graphql/api-public/objects/label-connection"},(0,d.kt)("inlineCode",{parentName:"a"},"LabelConnection")),"  ",(0,d.kt)(p,{class:"badge badge--secondary",text:"object",mdxType:"Badge"}),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"p",href:"/graphql/api-public/objects/label-edge"},(0,d.kt)("inlineCode",{parentName:"a"},"LabelEdge")),"  ",(0,d.kt)(p,{class:"badge badge--secondary",text:"object",mdxType:"Badge"}),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"p",href:"/graphql/api-public/objects/removed-label-event"},(0,d.kt)("inlineCode",{parentName:"a"},"RemovedLabelEvent")),"  ",(0,d.kt)(p,{class:"badge badge--secondary",text:"object",mdxType:"Badge"}),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"p",href:"/graphql/api-public/objects/update-label-payload"},(0,d.kt)("inlineCode",{parentName:"a"},"UpdateLabelPayload")),"  ",(0,d.kt)(p,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})))}h.isMDXComponent=!0}}]);