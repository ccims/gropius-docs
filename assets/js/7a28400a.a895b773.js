"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[87635],{189806:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>v,contentTitle:()=>f,default:()=>T,frontMatter:()=>u,metadata:()=>k,toc:()=>b});var n=i(487462),a=(i(667294),i(603905)),s=i(258219),r=(i(162316),i(580667)),o=i.n(r),c=i(524228),l=i.n(c),p=i(909487),d=i(241429),y=i(905397),g=i(504667),m=i(809472),h=i(685162);const u={id:"strategy-instances-controller-get-strategy-instance-13",title:"Get one strategy instance",description:"Gets one strategy instance by the specified id.",sidebar_label:"Get one strategy instance",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"StrategyInstancesController_getStrategyInstance_13",description:"Gets one strategy instance by the specified id.\nIf the type is specified, only instances of that type will be looked at",parameters:[{name:"id",required:!0,in:"path",description:"The uuid string of an existing strategy instance to get",schema:{format:"uuid",type:"string"}},{name:"type",required:!0,in:"path",description:"The strategy type name of which to search for the instance. Defaults to all types",schema:{type:"string"}}],responses:{200:{description:"The requested strategy instance wiht additional data for its use",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",description:"{@link StrategyInstance.id}"},name:{type:"string",nullable:!0,description:"{@link StrategyInstance.name}"},type:{type:"string",description:"{@link StrategyInstance.type}"},isLoginActive:{type:"boolean",description:"{@link StrategyInstance.isLoginActive}"},isSelfRegisterActive:{type:"boolean",description:"{@link StrategyInstance.isSelfRegisterActive}"},isSyncActive:{type:"boolean",description:"{@link StrategyInstance.isSyncActive}"},doesImplicitRegister:{type:"boolean",description:"{@link StrategyInstance.doesImplicitRegister}"},instanceConfig:{type:"object",description:"Instance config with sensitive data removed\n\n{@link StrategyInstance.instanceConfig}"}},required:["id","name","type","isLoginActive","isSelfRegisterActive","isSyncActive","doesImplicitRegister","instanceConfig"],title:"StrategyInstanceDetailResponse"}}}},404:{description:"If no strategy with the given id (and type) are found"}},tags:["login-api"],method:"get",path:"/auth/api/login/strategy/{type}/instance/{id}",servers:[],securitySchemes:{oauth2:{type:"oauth2",flows:{},description:"Access token provided by running the oauth flow (and if needed) registering/linking",bearerFormat:"JWT"},bearer:{scheme:"bearer",bearerFormat:"JWT",type:"apiKey",description:"Access token provided after running the oauth flow (and if needed registering/linking)"},api_key:{type:"apiKey",in:"header",name:"sync-api",description:"Secret Text shared between sync services and login service"}},info:{title:"Gropius Login Service",description:"API for login, registration and linking Gropius accounts to accounts on IMSs",version:"1.0.0",contact:{}},postman:{name:"Get one strategy instance",description:{content:"Gets one strategy instance by the specified id.\nIf the type is specified, only instances of that type will be looked at",type:"text/plain"},url:{path:["auth","api","login","strategy",":type","instance",":id"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) The uuid string of an existing strategy instance to get",type:"text/plain"},type:"any",value:"",key:"id"},{disabled:!1,description:{content:"(Required) The strategy type name of which to search for the instance. Defaults to all types",type:"text/plain"},type:"any",value:"",key:"type"}]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"login-service/gropius-login-service",custom_edit_url:null},f=void 0,k={unversionedId:"login-service/strategy-instances-controller-get-strategy-instance-13",id:"login-service/strategy-instances-controller-get-strategy-instance-13",title:"Get one strategy instance",description:"Gets one strategy instance by the specified id.",source:"@site/rest-docs/login-service/strategy-instances-controller-get-strategy-instance-13.api.mdx",sourceDirName:"login-service",slug:"/login-service/strategy-instances-controller-get-strategy-instance-13",permalink:"/gropius-docs/rest/login-service/strategy-instances-controller-get-strategy-instance-13",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"strategy-instances-controller-get-strategy-instance-13",title:"Get one strategy instance",description:"Gets one strategy instance by the specified id.",sidebar_label:"Get one strategy instance",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"StrategyInstancesController_getStrategyInstance_13",description:"Gets one strategy instance by the specified id.\nIf the type is specified, only instances of that type will be looked at",parameters:[{name:"id",required:!0,in:"path",description:"The uuid string of an existing strategy instance to get",schema:{format:"uuid",type:"string"}},{name:"type",required:!0,in:"path",description:"The strategy type name of which to search for the instance. Defaults to all types",schema:{type:"string"}}],responses:{200:{description:"The requested strategy instance wiht additional data for its use",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",description:"{@link StrategyInstance.id}"},name:{type:"string",nullable:!0,description:"{@link StrategyInstance.name}"},type:{type:"string",description:"{@link StrategyInstance.type}"},isLoginActive:{type:"boolean",description:"{@link StrategyInstance.isLoginActive}"},isSelfRegisterActive:{type:"boolean",description:"{@link StrategyInstance.isSelfRegisterActive}"},isSyncActive:{type:"boolean",description:"{@link StrategyInstance.isSyncActive}"},doesImplicitRegister:{type:"boolean",description:"{@link StrategyInstance.doesImplicitRegister}"},instanceConfig:{type:"object",description:"Instance config with sensitive data removed\n\n{@link StrategyInstance.instanceConfig}"}},required:["id","name","type","isLoginActive","isSelfRegisterActive","isSyncActive","doesImplicitRegister","instanceConfig"],title:"StrategyInstanceDetailResponse"}}}},404:{description:"If no strategy with the given id (and type) are found"}},tags:["login-api"],method:"get",path:"/auth/api/login/strategy/{type}/instance/{id}",servers:[],securitySchemes:{oauth2:{type:"oauth2",flows:{},description:"Access token provided by running the oauth flow (and if needed) registering/linking",bearerFormat:"JWT"},bearer:{scheme:"bearer",bearerFormat:"JWT",type:"apiKey",description:"Access token provided after running the oauth flow (and if needed registering/linking)"},api_key:{type:"apiKey",in:"header",name:"sync-api",description:"Secret Text shared between sync services and login service"}},info:{title:"Gropius Login Service",description:"API for login, registration and linking Gropius accounts to accounts on IMSs",version:"1.0.0",contact:{}},postman:{name:"Get one strategy instance",description:{content:"Gets one strategy instance by the specified id.\nIf the type is specified, only instances of that type will be looked at",type:"text/plain"},url:{path:["auth","api","login","strategy",":type","instance",":id"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) The uuid string of an existing strategy instance to get",type:"text/plain"},type:"any",value:"",key:"id"},{disabled:!1,description:{content:"(Required) The strategy type name of which to search for the instance. Defaults to all types",type:"text/plain"},type:"any",value:"",key:"type"}]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"login-service/gropius-login-service",custom_edit_url:null},sidebar:"restSidebar",previous:{title:"Delete a strategy instance",permalink:"/gropius-docs/rest/login-service/strategy-instances-controller-delete-strategy-instance-18"},next:{title:"Edit an existing strategy instance",permalink:"/gropius-docs/rest/login-service/strategy-instances-controller-update-strategy-instance-17"}},v={},b=[{value:"Request",id:"request",level:2}],I={toc:b},S="wrapper";function T(e){let{components:t,...i}=e;return(0,a.kt)(S,(0,n.Z)({},I,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{className:"openapi__heading"},"Get one strategy instance"),(0,a.kt)(o(),{method:"get",path:"/auth/api/login/strategy/{type}/instance/{id}",mdxType:"MethodEndpoint"}),(0,a.kt)(l(),{infoPath:"login-service/gropius-login-service",mdxType:"SecuritySchemes"}),(0,a.kt)("p",null,"Gets one strategy instance by the specified id.\nIf the type is specified, only instances of that type will be looked at"),(0,a.kt)("h2",{id:"request"},"Request"),(0,a.kt)("details",{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0},(0,a.kt)("summary",{style:{}},(0,a.kt)("h3",{className:"openapi-markdown__details-summary-header-params"},"Path Parameters")),(0,a.kt)("div",null,(0,a.kt)("ul",null,(0,a.kt)(d.Z,{className:"paramsItem",param:{name:"id",required:!0,in:"path",description:"The uuid string of an existing strategy instance to get",schema:{format:"uuid",type:"string"}},mdxType:"ParamsItem"}),(0,a.kt)(d.Z,{className:"paramsItem",param:{name:"type",required:!0,in:"path",description:"The strategy type name of which to search for the instance. Defaults to all types",schema:{type:"string"}},mdxType:"ParamsItem"})))),(0,a.kt)("div",null,(0,a.kt)("div",null,(0,a.kt)(s.Z,{mdxType:"ApiTabs"},(0,a.kt)(h.default,{label:"200",value:"200",mdxType:"TabItem"},(0,a.kt)("div",null,(0,a.kt)("p",null,"The requested strategy instance wiht additional data for its use")),(0,a.kt)("div",null,(0,a.kt)(p.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,a.kt)(h.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,a.kt)(m.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,a.kt)(h.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,a.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,a.kt)("strong",null,"Schema")),(0,a.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,a.kt)("ul",{style:{marginLeft:"1rem"}},(0,a.kt)(g.Z,{collapsible:!1,name:"id",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"{@link StrategyInstance.id}"},mdxType:"SchemaItem"}),(0,a.kt)(g.Z,{collapsible:!1,name:"name",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",nullable:!0,description:"{@link StrategyInstance.name}"},mdxType:"SchemaItem"}),(0,a.kt)(g.Z,{collapsible:!1,name:"type",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"{@link StrategyInstance.type}"},mdxType:"SchemaItem"}),(0,a.kt)(g.Z,{collapsible:!1,name:"isLoginActive",required:!0,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean",description:"{@link StrategyInstance.isLoginActive}"},mdxType:"SchemaItem"}),(0,a.kt)(g.Z,{collapsible:!1,name:"isSelfRegisterActive",required:!0,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean",description:"{@link StrategyInstance.isSelfRegisterActive}"},mdxType:"SchemaItem"}),(0,a.kt)(g.Z,{collapsible:!1,name:"isSyncActive",required:!0,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean",description:"{@link StrategyInstance.isSyncActive}"},mdxType:"SchemaItem"}),(0,a.kt)(g.Z,{collapsible:!1,name:"doesImplicitRegister",required:!0,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean",description:"{@link StrategyInstance.doesImplicitRegister}"},mdxType:"SchemaItem"}),(0,a.kt)(g.Z,{collapsible:!1,name:"instanceConfig",required:!0,schemaName:"object",qualifierMessage:void 0,schema:{type:"object",description:"Instance config with sensitive data removed\n\n{@link StrategyInstance.instanceConfig}"},mdxType:"SchemaItem"})))),(0,a.kt)(h.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,a.kt)(y.Z,{responseExample:'{\n  "id": "string",\n  "name": "string",\n  "type": "string",\n  "isLoginActive": true,\n  "isSelfRegisterActive": true,\n  "isSyncActive": true,\n  "doesImplicitRegister": true,\n  "instanceConfig": {}\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,a.kt)(h.default,{label:"404",value:"404",mdxType:"TabItem"},(0,a.kt)("div",null,(0,a.kt)("p",null,"If no strategy with the given id (and type) are found")),(0,a.kt)("div",null))))))}T.isMDXComponent=!0}}]);