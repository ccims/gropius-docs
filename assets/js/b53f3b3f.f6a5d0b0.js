"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[23442],{234675:(e,t,l)=>{l.r(t),l.d(t,{Badge:()=>u,Bullet:()=>d,Details:()=>f,SpecifiedBy:()=>m,assets:()=>o,contentTitle:()=>r,default:()=>g,frontMatter:()=>p,metadata:()=>s,toc:()=>c});var i=l(487462),a=l(667294),n=l(603905);const p={id:"imstemplate-list-filter-input",title:"IMSTemplateListFilterInput",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},r=void 0,s={unversionedId:"graphql/api-public/inputs/imstemplate-list-filter-input",id:"graphql/api-public/inputs/imstemplate-list-filter-input",title:"IMSTemplateListFilterInput",description:"Used to filter by a connection-based property. Fields are joined by AND",source:"@site/docs/graphql/api-public/inputs/imstemplate-list-filter-input.mdx",sourceDirName:"graphql/api-public/inputs",slug:"/graphql/api-public/inputs/imstemplate-list-filter-input",permalink:"/gropius-docs/graphql/api-public/inputs/imstemplate-list-filter-input",draft:!1,tags:[],version:"current",frontMatter:{id:"imstemplate-list-filter-input",title:"IMSTemplateListFilterInput",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},sidebar:"graphqlSidebar"},o={},d=()=>(0,n.kt)(a.Fragment,null,(0,n.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),m=e=>(0,n.kt)(a.Fragment,null,"Specification",(0,n.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),u=e=>(0,n.kt)(a.Fragment,null,(0,n.kt)("span",{className:e.class},e.text)),c=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>IMSTemplateListFilterInput.<b>all</b></code><Bullet /><code>IMSTemplateFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-imstemplatelistfilterinputballbcodeimstemplatefilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>IMSTemplateListFilterInput.<b>any</b></code><Bullet /><code>IMSTemplateFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-imstemplatelistfilterinputbanybcodeimstemplatefilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>IMSTemplateListFilterInput.<b>none</b></code><Bullet /><code>IMSTemplateFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-imstemplatelistfilterinputbnonebcodeimstemplatefilterinput-",level:4},{value:"Member of",id:"member-of",level:3}],f=e=>{let{dataOpen:t,dataClose:l,children:p,startOpen:r=!1}=e;const[s,o]=(0,a.useState)(r);return(0,n.kt)("details",(0,i.Z)({},s?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,n.kt)("summary",{onClick:e=>{e.preventDefault(),o((e=>!e))},style:{listStyle:"none"}},s?t:l),s&&p)},b={Bullet:d,SpecifiedBy:m,Badge:u,toc:c,Details:f},k="wrapper";function g(e){let{components:t,...l}=e;return(0,n.kt)(k,(0,i.Z)({},b,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Used to filter by a connection-based property. Fields are joined by AND"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-graphql"},"input IMSTemplateListFilterInput {\n  all: IMSTemplateFilterInput\n  any: IMSTemplateFilterInput\n  none: IMSTemplateFilterInput\n}\n")),(0,n.kt)("h3",{id:"fields"},"Fields"),(0,n.kt)("h4",{id:"code-style-fontweight-normal-imstemplatelistfilterinputballbcodeimstemplatefilterinput-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"IMSTemplateListFilterInput.",(0,n.kt)("b",null,"all"))),(0,n.kt)(d,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/imstemplate-filter-input"},(0,n.kt)("inlineCode",{parentName:"a"},"IMSTemplateFilterInput"))," ",(0,n.kt)(u,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Filters for nodes where all of the related nodes match this filter")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-imstemplatelistfilterinputbanybcodeimstemplatefilterinput-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"IMSTemplateListFilterInput.",(0,n.kt)("b",null,"any"))),(0,n.kt)(d,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/imstemplate-filter-input"},(0,n.kt)("inlineCode",{parentName:"a"},"IMSTemplateFilterInput"))," ",(0,n.kt)(u,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Filters for nodes where any of the related nodes match this filter")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-imstemplatelistfilterinputbnonebcodeimstemplatefilterinput-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"IMSTemplateListFilterInput.",(0,n.kt)("b",null,"none"))),(0,n.kt)(d,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/imstemplate-filter-input"},(0,n.kt)("inlineCode",{parentName:"a"},"IMSTemplateFilterInput"))," ",(0,n.kt)(u,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Filters for nodes where none of the related nodes match this filter")),(0,n.kt)("h3",{id:"member-of"},"Member of"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/graphql/api-public/inputs/imstemplate-filter-input"},(0,n.kt)("inlineCode",{parentName:"a"},"IMSTemplateFilterInput")),"  ",(0,n.kt)(u,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})))}g.isMDXComponent=!0}}]);