"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[90156],{155439:(e,t,d)=>{d.r(t),d.d(t,{Badge:()=>c,Bullet:()=>p,Details:()=>b,SpecifiedBy:()=>s,assets:()=>u,contentTitle:()=>o,default:()=>k,frontMatter:()=>l,metadata:()=>r,toc:()=>m});var a=d(487462),i=d(667294),n=d(603905);const l={id:"named-audited-node-filter-input",title:"NamedAuditedNodeFilterInput",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},o=void 0,r={unversionedId:"graphql/api-public/inputs/named-audited-node-filter-input",id:"graphql/api-public/inputs/named-audited-node-filter-input",title:"NamedAuditedNodeFilterInput",description:"Filter used to filter NamedAuditedNode",source:"@site/docs/graphql/api-public/inputs/named-audited-node-filter-input.mdx",sourceDirName:"graphql/api-public/inputs",slug:"/graphql/api-public/inputs/named-audited-node-filter-input",permalink:"/gropius-docs/graphql/api-public/inputs/named-audited-node-filter-input",draft:!1,tags:[],version:"current",frontMatter:{id:"named-audited-node-filter-input",title:"NamedAuditedNodeFilterInput",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},sidebar:"graphqlSidebar"},u={},p=()=>(0,n.kt)(i.Fragment,null,(0,n.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),s=e=>(0,n.kt)(i.Fragment,null,"Specification",(0,n.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),c=e=>(0,n.kt)(i.Fragment,null,(0,n.kt)("span",{className:e.class},e.text)),m=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>NamedAuditedNodeFilterInput.<b>and</b></code><Bullet /><code>[NamedAuditedNodeFilterInput!]</code> <Badge class="badge badge--secondary" text="list"/> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-namedauditednodefilterinputbandbcodenamedauditednodefilterinput--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>NamedAuditedNodeFilterInput.<b>createdAt</b></code><Bullet /><code>DateTimeFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-namedauditednodefilterinputbcreatedatbcodedatetimefilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>NamedAuditedNodeFilterInput.<b>createdBy</b></code><Bullet /><code>UserFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-namedauditednodefilterinputbcreatedbybcodeuserfilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>NamedAuditedNodeFilterInput.<b>description</b></code><Bullet /><code>StringFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-namedauditednodefilterinputbdescriptionbcodestringfilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>NamedAuditedNodeFilterInput.<b>id</b></code><Bullet /><code>IDFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-namedauditednodefilterinputbidbcodeidfilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>NamedAuditedNodeFilterInput.<b>isLabelAnd</b></code><Bullet /><code>LabelFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-namedauditednodefilterinputbislabelandbcodelabelfilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>NamedAuditedNodeFilterInput.<b>lastModifiedAt</b></code><Bullet /><code>DateTimeFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-namedauditednodefilterinputblastmodifiedatbcodedatetimefilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>NamedAuditedNodeFilterInput.<b>lastModifiedBy</b></code><Bullet /><code>UserFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-namedauditednodefilterinputblastmodifiedbybcodeuserfilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>NamedAuditedNodeFilterInput.<b>name</b></code><Bullet /><code>StringFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-namedauditednodefilterinputbnamebcodestringfilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>NamedAuditedNodeFilterInput.<b>not</b></code><Bullet /><code>NamedAuditedNodeFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-namedauditednodefilterinputbnotbcodenamedauditednodefilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>NamedAuditedNodeFilterInput.<b>or</b></code><Bullet /><code>[NamedAuditedNodeFilterInput!]</code> <Badge class="badge badge--secondary" text="list"/> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-namedauditednodefilterinputborbcodenamedauditednodefilterinput--",level:4},{value:"Member of",id:"member-of",level:3}],b=e=>{let{dataOpen:t,dataClose:d,children:l,startOpen:o=!1}=e;const[r,u]=(0,i.useState)(o);return(0,n.kt)("details",(0,a.Z)({},r?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,n.kt)("summary",{onClick:e=>{e.preventDefault(),u((e=>!e))},style:{listStyle:"none"}},r?t:d),r&&l)},f={Bullet:p,SpecifiedBy:s,Badge:c,toc:m,Details:b},g="wrapper";function k(e){let{components:t,...d}=e;return(0,n.kt)(g,(0,a.Z)({},f,d,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Filter used to filter NamedAuditedNode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-graphql"},"input NamedAuditedNodeFilterInput {\n  and: [NamedAuditedNodeFilterInput!]\n  createdAt: DateTimeFilterInput\n  createdBy: UserFilterInput\n  description: StringFilterInput\n  id: IDFilterInput\n  isLabelAnd: LabelFilterInput\n  lastModifiedAt: DateTimeFilterInput\n  lastModifiedBy: UserFilterInput\n  name: StringFilterInput\n  not: NamedAuditedNodeFilterInput\n  or: [NamedAuditedNodeFilterInput!]\n}\n")),(0,n.kt)("h3",{id:"fields"},"Fields"),(0,n.kt)("h4",{id:"code-style-fontweight-normal-namedauditednodefilterinputbandbcodenamedauditednodefilterinput--"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"NamedAuditedNodeFilterInput.",(0,n.kt)("b",null,"and"))),(0,n.kt)(p,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/named-audited-node-filter-input"},(0,n.kt)("inlineCode",{parentName:"a"},"[NamedAuditedNodeFilterInput!]"))," ",(0,n.kt)(c,{class:"badge badge--secondary",text:"list",mdxType:"Badge"})," ",(0,n.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Connects all subformulas via and")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-namedauditednodefilterinputbcreatedatbcodedatetimefilterinput-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"NamedAuditedNodeFilterInput.",(0,n.kt)("b",null,"createdAt"))),(0,n.kt)(p,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/date-time-filter-input"},(0,n.kt)("inlineCode",{parentName:"a"},"DateTimeFilterInput"))," ",(0,n.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Filter by createdAt")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-namedauditednodefilterinputbcreatedbybcodeuserfilterinput-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"NamedAuditedNodeFilterInput.",(0,n.kt)("b",null,"createdBy"))),(0,n.kt)(p,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/user-filter-input"},(0,n.kt)("inlineCode",{parentName:"a"},"UserFilterInput"))," ",(0,n.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Filters for nodes where the related node match this filter")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-namedauditednodefilterinputbdescriptionbcodestringfilterinput-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"NamedAuditedNodeFilterInput.",(0,n.kt)("b",null,"description"))),(0,n.kt)(p,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/string-filter-input"},(0,n.kt)("inlineCode",{parentName:"a"},"StringFilterInput"))," ",(0,n.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Filter by description")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-namedauditednodefilterinputbidbcodeidfilterinput-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"NamedAuditedNodeFilterInput.",(0,n.kt)("b",null,"id"))),(0,n.kt)(p,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/idfilter-input"},(0,n.kt)("inlineCode",{parentName:"a"},"IDFilterInput"))," ",(0,n.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Filter by id")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-namedauditednodefilterinputbislabelandbcodelabelfilterinput-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"NamedAuditedNodeFilterInput.",(0,n.kt)("b",null,"isLabelAnd"))),(0,n.kt)(p,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/label-filter-input"},(0,n.kt)("inlineCode",{parentName:"a"},"LabelFilterInput"))," ",(0,n.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Filter for nodes of type Label")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-namedauditednodefilterinputblastmodifiedatbcodedatetimefilterinput-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"NamedAuditedNodeFilterInput.",(0,n.kt)("b",null,"lastModifiedAt"))),(0,n.kt)(p,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/date-time-filter-input"},(0,n.kt)("inlineCode",{parentName:"a"},"DateTimeFilterInput"))," ",(0,n.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Filter by lastModifiedAt")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-namedauditednodefilterinputblastmodifiedbybcodeuserfilterinput-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"NamedAuditedNodeFilterInput.",(0,n.kt)("b",null,"lastModifiedBy"))),(0,n.kt)(p,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/user-filter-input"},(0,n.kt)("inlineCode",{parentName:"a"},"UserFilterInput"))," ",(0,n.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Filters for nodes where the related node match this filter")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-namedauditednodefilterinputbnamebcodestringfilterinput-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"NamedAuditedNodeFilterInput.",(0,n.kt)("b",null,"name"))),(0,n.kt)(p,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/string-filter-input"},(0,n.kt)("inlineCode",{parentName:"a"},"StringFilterInput"))," ",(0,n.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Filter by name")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-namedauditednodefilterinputbnotbcodenamedauditednodefilterinput-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"NamedAuditedNodeFilterInput.",(0,n.kt)("b",null,"not"))),(0,n.kt)(p,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/named-audited-node-filter-input"},(0,n.kt)("inlineCode",{parentName:"a"},"NamedAuditedNodeFilterInput"))," ",(0,n.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Negates the subformula")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-namedauditednodefilterinputborbcodenamedauditednodefilterinput--"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"NamedAuditedNodeFilterInput.",(0,n.kt)("b",null,"or"))),(0,n.kt)(p,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/named-audited-node-filter-input"},(0,n.kt)("inlineCode",{parentName:"a"},"[NamedAuditedNodeFilterInput!]"))," ",(0,n.kt)(c,{class:"badge badge--secondary",text:"list",mdxType:"Badge"})," ",(0,n.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Connects all subformulas via or")),(0,n.kt)("h3",{id:"member-of"},"Member of"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/graphql/api-public/inputs/audited-node-filter-input"},(0,n.kt)("inlineCode",{parentName:"a"},"AuditedNodeFilterInput")),"  ",(0,n.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"}),(0,n.kt)(p,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"p",href:"/graphql/api-public/inputs/named-audited-node-filter-input"},(0,n.kt)("inlineCode",{parentName:"a"},"NamedAuditedNodeFilterInput")),"  ",(0,n.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})))}k.isMDXComponent=!0}}]);