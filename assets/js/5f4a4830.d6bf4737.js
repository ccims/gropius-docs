"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[16305],{980862:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>d,toc:()=>o});var i=n(487462),a=(n(667294),n(603905));const l={id:"util_checkType",title:"Module: util/checkType",sidebar_label:"util/checkType",sidebar_position:0,custom_edit_url:null},r=void 0,d={unversionedId:"login-service-api/modules/util_checkType",id:"login-service-api/modules/util_checkType",title:"Module: util/checkType",description:"Functions",source:"@site/docs/login-service-api/modules/util_checkType.md",sourceDirName:"login-service-api/modules",slug:"/login-service-api/modules/util_checkType",permalink:"/gropius-docs/login-service-api/modules/util_checkType",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"util_checkType",title:"Module: util/checkType",sidebar_label:"util/checkType",sidebar_position:0,custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"util/NeedsAdmin",permalink:"/gropius-docs/login-service-api/modules/util_NeedsAdmin"},next:{title:"util/combineURL",permalink:"/gropius-docs/login-service-api/modules/util_combineURL"}},p={},o=[{value:"Functions",id:"functions",level:2},{value:"checkType",id:"checktype",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4}],s={toc:o},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,i.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"functions"},"Functions"),(0,a.kt)("h3",{id:"checktype"},"checkType"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"checkType"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"object"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"key"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"nullable?"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"defaultValue?"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"any")),(0,a.kt)("p",null,'Checks a key if an object for a specified type using the typeof operator.\nIf type is "string" will also check, the value is not empty.'),(0,a.kt)("p",null,"If nullable and a default is given, this will be returned, if the field is undefined\n(NOT if the type check was unsuccessful)"),(0,a.kt)("h4",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"object")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"object")),(0,a.kt)("td",{parentName:"tr",align:"left"},"The object in which to check the key")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"key")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:"left"},"The key in the object in which to check the type")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"type")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},'"string"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"td"},'"number"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"td"},'"bigint"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"td"},'"boolean"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"td"},'"symbol"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"td"},'"undefined"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"td"},'"object"')," ","|"," ",(0,a.kt)("inlineCode",{parentName:"td"},'"function"')),(0,a.kt)("td",{parentName:"tr",align:"left"},"The Expected type of the field. Must be one of the types returned by the ",(0,a.kt)("inlineCode",{parentName:"td"},"typeof")," operator")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"nullable?")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"boolean")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Set to true if the field may be undefined")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"defaultValue?")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"any")),(0,a.kt)("td",{parentName:"tr",align:"left"},"If undefined, this value will be returned instead")))),(0,a.kt)("h4",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"any")),(0,a.kt)("p",null,"The field value if the type check was successful, if undefined and nullable the default value"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Throws"))),(0,a.kt)("p",null,"Error with according message if the type check wasn't successful"),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/ccims/gropius-login-service/blob/9da669b/backend/src/util/checkType.ts#L16"},"gropius-login-service/backend/src/util/checkType.ts:16")))}u.isMDXComponent=!0}}]);